// Copyright (c) 2018 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
//
// WSO2 Inc. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

public function LLVMLoadLibraryPermanently(string filename) returns int = external;
//public function LLVMLoadLibraryPermanently(BytePointer filename) returns int = external;
//public function LLVMParseCommandLineOptions(int argc, byte[] argv, BytePointer overview) = external;
//public function LLVMParseCommandLineOptions(int argc, ByteBuffer argv, string overview) = external;
//public function LLVMParseCommandLineOptions(int argc, BytePointer argv, string overview) = external;
//public function LLVMParseCommandLineOptions(int argc, ByteBuffer argv, BytePointer overview) = external;
//public function LLVMParseCommandLineOptions(int argc, byte[] argv, string overview) = external;
//public function LLVMParseCommandLineOptions(int argc, PointerPointer argv, BytePointer overview) = external;
//public function LLVMParseCommandLineOptions(int argc, BytePointer argv, BytePointer overview) = external;
public function LLVMSearchForAddressOfSymbol(string symbolName) returns Pointer = external;
//public function LLVMSearchForAddressOfSymbol(BytePointer symbolName) returns Pointer = external;
public function LLVMAddSymbol(string symbolName, Pointer symbolValue) = external;
//public function LLVMAddSymbol(BytePointer symbolName, Pointer symbolValue) = external;
public function LLVMInitializeCore(LLVMPassRegistryRef r) = external;
public function LLVMShutdown() = external;
//public function LLVMCreateMessage(BytePointer message) returns BytePointer = external;
public function LLVMCreateMessage(string message) returns ByteBuffer = external;
//public function LLVMDisposeMessage(byte[] message) = external;
//public function LLVMDisposeMessage(ByteBuffer message) = external;
//public function LLVMDisposeMessage(BytePointer message) = external;
public function LLVMContextCreate() returns LLVMContextRef = external;
public function LLVMGetGlobalContext() returns LLVMContextRef = external;
public function LLVMContextSetDiagnosticHandler(LLVMContextRef c, LLVMDiagnosticHandler handler, Pointer diagnosticContext) = external;
public function LLVMContextGetDiagnosticHandler(LLVMContextRef c) returns LLVMDiagnosticHandler = external;
public function LLVMContextGetDiagnosticContext(LLVMContextRef c) returns Pointer = external;
public function LLVMContextSetYieldCallback(LLVMContextRef c, LLVMYieldCallback callback, Pointer opaqueHandle) = external;
public function LLVMContextDispose(LLVMContextRef c) = external;
public function LLVMGetDiagInfoDescription(LLVMDiagnosticInfoRef di) returns BytePointer = external;
public function LLVMGetDiagInfoSeverity(LLVMDiagnosticInfoRef di) returns int = external;
//public function LLVMGetMDKindIDInContext(LLVMContextRef c, BytePointer name, int sLen) returns int = external;
public function LLVMGetMDKindIDInContext(LLVMContextRef c, string name, int sLen) returns int = external;
//public function LLVMGetMDKindID(BytePointer name, int sLen) returns int = external;
public function LLVMGetMDKindID(string name, int sLen) returns int = external;
//public function LLVMGetEnumAttributeKindForName(BytePointer name, int sLen) returns int = external;
public function LLVMGetEnumAttributeKindForName(string name, int sLen) returns int = external;
public function LLVMGetLastEnumAttributeKind() returns int = external;
public function LLVMCreateEnumAttribute(LLVMContextRef c, int kindID, int val) returns LLVMAttributeRef = external;
public function LLVMGetEnumAttributeKind(LLVMAttributeRef a) returns int = external;
public function LLVMGetEnumAttributeValue(LLVMAttributeRef a) returns int = external;
public function LLVMCreateStringAttribute(LLVMContextRef c, string k, int kLength, string v, int vLength) returns LLVMAttributeRef = external;
//public function LLVMCreateStringAttribute(LLVMContextRef c, BytePointer k, int kLength, BytePointer v, int vLength) returns LLVMAttributeRef = external;
//public function LLVMGetStringAttributeKind(LLVMAttributeRef a, IntBuffer length) returns string = external;
//public function LLVMGetStringAttributeKind(LLVMAttributeRef a, int[] length) returns BytePointer = external;
//public function LLVMGetStringAttributeKind(LLVMAttributeRef a, IntPointer length) returns BytePointer = external;
//public function LLVMGetStringAttributeValue(LLVMAttributeRef a, int[] length) returns BytePointer = external;
//public function LLVMGetStringAttributeValue(LLVMAttributeRef a, IntBuffer length) returns string = external;
//public function LLVMGetStringAttributeValue(LLVMAttributeRef a, IntPointer length) returns BytePointer = external;
public function LLVMIsEnumAttribute(LLVMAttributeRef a) returns int = external;
public function LLVMIsStringAttribute(LLVMAttributeRef a) returns int = external;
public function LLVMModuleCreateWithName(string moduleID) returns LLVMModuleRef = external;
//public function LLVMModuleCreateWithName(BytePointer moduleID) returns LLVMModuleRef = external;
//public function LLVMModuleCreateWithNameInContext(BytePointer moduleID, LLVMContextRef c) returns LLVMModuleRef = external;
public function LLVMModuleCreateWithNameInContext(string moduleID, LLVMContextRef c) returns LLVMModuleRef = external;
public function LLVMCloneModule(LLVMModuleRef m) returns LLVMModuleRef = external;
public function LLVMDisposeModule(LLVMModuleRef m) = external;
public function LLVMGetModuleIdentifier(LLVMModuleRef m, SizeTPointer len) returns BytePointer = external;
public function LLVMSetModuleIdentifier(LLVMModuleRef m, string ident, int len) = external;
//public function LLVMSetModuleIdentifier(LLVMModuleRef m, BytePointer ident, int len) = external;
public function LLVMGetDataLayoutStr(LLVMModuleRef m) returns BytePointer = external;
public function LLVMGetDataLayout(LLVMModuleRef m) returns BytePointer = external;
public function LLVMSetDataLayout(LLVMModuleRef m, string dataLayoutStr) = external;
//public function LLVMSetDataLayout(LLVMModuleRef m, BytePointer dataLayoutStr) = external;
public function LLVMGetTarget(LLVMModuleRef m) returns BytePointer = external;
public function LLVMSetTarget(LLVMModuleRef m, string triple) = external;
//public function LLVMSetTarget(LLVMModuleRef m, BytePointer triple) = external;
public function LLVMDumpModule(LLVMModuleRef m) = external;
//public function LLVMPrintModuleToFile(LLVMModuleRef m, BytePointer filename, byte[] errorMessage) returns int = external;
//public function LLVMPrintModuleToFile(LLVMModuleRef m, string filename, ByteBuffer errorMessage) returns int = external;
//public function LLVMPrintModuleToFile(LLVMModuleRef m, string filename, BytePointer errorMessage) returns int = external;
//public function LLVMPrintModuleToFile(LLVMModuleRef m, BytePointer filename, ByteBuffer errorMessage) returns int = external;
//public function LLVMPrintModuleToFile(LLVMModuleRef m, string filename, byte[] errorMessage) returns int = external;
//public function LLVMPrintModuleToFile(LLVMModuleRef m, BytePointer filename, PointerPointer errorMessage) returns int = external;
//public function LLVMPrintModuleToFile(LLVMModuleRef m, BytePointer filename, BytePointer errorMessage) returns int = external;
public function LLVMPrintModuleToString(LLVMModuleRef m) returns BytePointer = external;
public function LLVMSetModuleInlineAsm(LLVMModuleRef m, string asm) = external;
//public function LLVMSetModuleInlineAsm(LLVMModuleRef m, BytePointer asm) = external;
public function LLVMGetModuleContext(LLVMModuleRef m) returns LLVMContextRef = external;
public function LLVMGetTypeByName(LLVMModuleRef m, string name) returns LLVMTypeRef = external;
//public function LLVMGetTypeByName(LLVMModuleRef m, BytePointer name) returns LLVMTypeRef = external;
//public function LLVMGetNamedMetadataNumOperands(LLVMModuleRef m, BytePointer name) returns int = external;
public function LLVMGetNamedMetadataNumOperands(LLVMModuleRef m, string name) returns int = external;
//public function LLVMGetNamedMetadataOperands(LLVMModuleRef m, BytePointer name, LLVMValueRef dest) = external;
public function LLVMGetNamedMetadataOperands(LLVMModuleRef m, string name, PointerPointer dest) = external;
public function LLVMAddNamedMetadataOperand(LLVMModuleRef m, string name, LLVMValueRef val) = external;
//public function LLVMAddNamedMetadataOperand(LLVMModuleRef m, BytePointer name, LLVMValueRef val) = external;
public function LLVMAddFunction(LLVMModuleRef m, string name, LLVMTypeRef functionTy) returns LLVMValueRef = external;
//public function LLVMAddFunction(LLVMModuleRef m, BytePointer name, LLVMTypeRef functionTy) returns LLVMValueRef = external;
//public function LLVMGetNamedFunction(LLVMModuleRef m, BytePointer name) returns LLVMValueRef = external;
public function LLVMGetNamedFunction(LLVMModuleRef m, string name) returns LLVMValueRef = external;
public function LLVMGetFirstFunction(LLVMModuleRef m) returns LLVMValueRef = external;
public function LLVMGetLastFunction(LLVMModuleRef m) returns LLVMValueRef = external;
public function LLVMGetNextFunction(LLVMValueRef fn) returns LLVMValueRef = external;
public function LLVMGetPreviousFunction(LLVMValueRef fn) returns LLVMValueRef = external;
public function LLVMGetTypeKind(LLVMTypeRef ty) returns int = external;
public function LLVMTypeIsSized(LLVMTypeRef ty) returns int = external;
public function LLVMGetTypeContext(LLVMTypeRef ty) returns LLVMContextRef = external;
public function LLVMPrintTypeToString(LLVMTypeRef val) returns BytePointer = external;
public function LLVMInt1TypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMInt8TypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMInt16TypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMInt32TypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMInt64TypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMInt128TypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMIntTypeInContext(LLVMContextRef c, int numBits) returns LLVMTypeRef = external;
public function LLVMInt1Type() returns LLVMTypeRef = external;
public function LLVMInt8Type() returns LLVMTypeRef = external;
public function LLVMInt16Type() returns LLVMTypeRef = external;
public function LLVMInt32Type() returns LLVMTypeRef = external;
public function LLVMInt64Type() returns LLVMTypeRef = external;
public function LLVMInt128Type() returns LLVMTypeRef = external;
public function LLVMIntType(int numBits) returns LLVMTypeRef = external;
public function LLVMGetIntTypeWidth(LLVMTypeRef integerTy) returns int = external;
public function LLVMHalfTypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMFloatTypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMDoubleTypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMX86FP80TypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMFP128TypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMPPCFP128TypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMHalfType() returns LLVMTypeRef = external;
public function LLVMFloatType() returns LLVMTypeRef = external;
public function LLVMDoubleType() returns LLVMTypeRef = external;
public function LLVMX86FP80Type() returns LLVMTypeRef = external;
public function LLVMFP128Type() returns LLVMTypeRef = external;
public function LLVMPPCFP128Type() returns LLVMTypeRef = external;
public function LLVMFunctionType0(LLVMTypeRef returnType, LLVMTypeRef paramTypes, int paramCount, int isVarArg) returns LLVMTypeRef = external;
public function LLVMFunctionType1(LLVMTypeRef returnType, LLVMTypeRef[] paramTypes, int paramCount, int isVarArg) returns LLVMTypeRef = external;
public function LLVMIsFunctionVarArg(LLVMTypeRef functionTy) returns int = external;
public function LLVMGetReturnType(LLVMTypeRef functionTy) returns LLVMTypeRef = external;
public function LLVMCountParamTypes(LLVMTypeRef functionTy) returns int = external;
public function LLVMGetParamTypes0(LLVMTypeRef functionTy, PointerPointer dest) = external;
public function LLVMGetParamTypes1(LLVMTypeRef functionTy, LLVMTypeRef dest) = external;
public function LLVMStructTypeInContext0(LLVMContextRef c, LLVMTypeRef elementTypes, int elementCount, int packed) returns LLVMTypeRef = external;
public function LLVMStructTypeInContext1(LLVMContextRef c, PointerPointer elementTypes, int elementCount, int packed) returns LLVMTypeRef = external;
public function LLVMStructType0(PointerPointer elementTypes, int elementCount, int packed) returns LLVMTypeRef = external;
public function LLVMStructType1(LLVMTypeRef elementTypes, int elementCount, int packed) returns LLVMTypeRef = external;
//public function LLVMStructCreateNamed(LLVMContextRef c, BytePointer name) returns LLVMTypeRef = external;
public function LLVMStructCreateNamed(LLVMContextRef c, string name) returns LLVMTypeRef = external;
public function LLVMGetStructName(LLVMTypeRef ty) returns BytePointer = external;
public function LLVMStructSetBody0(LLVMTypeRef structTy, LLVMTypeRef elementTypes, int elementCount, int packed) = external;
public function LLVMStructSetBody1(LLVMTypeRef structTy, PointerPointer elementTypes, int elementCount, int packed) = external;
public function LLVMCountStructElementTypes(LLVMTypeRef structTy) returns int = external;
public function LLVMGetStructElementTypes0(LLVMTypeRef structTy, LLVMTypeRef dest) = external;
public function LLVMGetStructElementTypes1(LLVMTypeRef structTy, PointerPointer dest) = external;
public function LLVMStructGetTypeAtIndex(LLVMTypeRef structTy, int i) returns LLVMTypeRef = external;
public function LLVMIsPackedStruct(LLVMTypeRef structTy) returns int = external;
public function LLVMIsOpaqueStruct(LLVMTypeRef structTy) returns int = external;
public function LLVMGetElementType(LLVMTypeRef ty) returns LLVMTypeRef = external;
public function LLVMGetSubtypes0(LLVMTypeRef tp, PointerPointer arr) = external;
public function LLVMGetSubtypes1(LLVMTypeRef tp, LLVMTypeRef arr) = external;
public function LLVMGetNumContainedTypes(LLVMTypeRef tp) returns int = external;
public function LLVMArrayType(LLVMTypeRef elementType, int elementCount) returns LLVMTypeRef = external;
public function LLVMGetArrayLength(LLVMTypeRef arrayTy) returns int = external;
public function LLVMPointerType(LLVMTypeRef elementType, int addressSpace) returns LLVMTypeRef = external;
public function LLVMGetPointerAddressSpace(LLVMTypeRef pointerTy) returns int = external;
public function LLVMVectorType(LLVMTypeRef elementType, int elementCount) returns LLVMTypeRef = external;
public function LLVMGetVectorSize(LLVMTypeRef vectorTy) returns int = external;
public function LLVMVoidTypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMLabelTypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMX86MMXTypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMTokenTypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMMetadataTypeInContext(LLVMContextRef c) returns LLVMTypeRef = external;
public function LLVMVoidType() returns LLVMTypeRef = external;
public function LLVMLabelType() returns LLVMTypeRef = external;
public function LLVMX86MMXType() returns LLVMTypeRef = external;
public function LLVMTypeOf(LLVMValueRef val) returns LLVMTypeRef = external;
public function LLVMGetValueKind(LLVMValueRef val) returns int = external;
public function LLVMGetValueName(LLVMValueRef val) returns BytePointer = external;
//public function LLVMSetValueName(LLVMValueRef val, BytePointer name) = external;
public function LLVMSetValueName(LLVMValueRef val, string name) = external;
public function LLVMDumpValue(LLVMValueRef val) = external;
public function LLVMPrintValueToString(LLVMValueRef val) returns BytePointer = external;
public function LLVMReplaceAllUsesWith(LLVMValueRef oldVal, LLVMValueRef newVal) = external;
public function LLVMIsConstant(LLVMValueRef val) returns int = external;
public function LLVMIsUndef(LLVMValueRef val) returns int = external;
public function LLVMIsAArgument(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsABasicBlock(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAInlineAsm(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAUser(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstant(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsABlockAddress(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantAggregateZero(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantArray(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantDataSequential(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantDataArray(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantDataVector(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantExpr(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantFP(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantInt(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantPointerNull(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantStruct(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantTokenNone(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAConstantVector(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAGlobalValue(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAGlobalAlias(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAGlobalObject(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAFunction(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAGlobalVariable(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAUndefValue(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAInstruction(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsABinaryOperator(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsACallInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAIntrinsicInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsADbgInfoIntrinsic(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsADbgDeclareInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAMemIntrinsic(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAMemCpyInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAMemMoveInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAMemSetInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsACmpInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAFCmpInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAICmpInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAExtractElementInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAGetElementPtrInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAInsertElementInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAInsertValueInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsALandingPadInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAPHINode(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsASelectInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAShuffleVectorInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAStoreInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsATerminatorInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsABranchInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAIndirectBrInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAInvokeInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAReturnInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsASwitchInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAUnreachableInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAResumeInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsACleanupReturnInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsACatchReturnInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAFuncletPadInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsACatchPadInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsACleanupPadInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAUnaryInstruction(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAAllocaInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsACastInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAAddrSpaceCastInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsABitCastInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAFPExtInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAFPToSIInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAFPToUIInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAFPTruncInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAIntToPtrInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAPtrToIntInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsASExtInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsASIToFPInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsATruncInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAUIToFPInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAZExtInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAExtractValueInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsALoadInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAVAArgInst(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAMDNode(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMIsAMDString(LLVMValueRef val) returns LLVMValueRef = external;
public function LLVMGetFirstUse(LLVMValueRef val) returns LLVMUseRef = external;
public function LLVMGetNextUse(LLVMUseRef u) returns LLVMUseRef = external;
public function LLVMGetUser(LLVMUseRef u) returns LLVMValueRef = external;
public function LLVMGetUsedValue(LLVMUseRef u) returns LLVMValueRef = external;
public function LLVMGetOperand(LLVMValueRef val, int index) returns LLVMValueRef = external;
public function LLVMGetOperandUse(LLVMValueRef val, int index) returns LLVMUseRef = external;
public function LLVMSetOperand(LLVMValueRef user, int index, LLVMValueRef val) = external;
public function LLVMGetNumOperands(LLVMValueRef val) returns int = external;
public function LLVMConstNull(LLVMTypeRef ty) returns LLVMValueRef = external;
public function LLVMConstAllOnes(LLVMTypeRef ty) returns LLVMValueRef = external;
public function LLVMGetUndef(LLVMTypeRef ty) returns LLVMValueRef = external;
public function LLVMIsNull(LLVMValueRef val) returns int = external;
public function LLVMConstPointerNull(LLVMTypeRef ty) returns LLVMValueRef = external;
public function LLVMConstInt(LLVMTypeRef intTy, int n, int signExtend) returns LLVMValueRef = external;
//public function LLVMConstIntOfArbitraryPrecision(LLVMTypeRef intTy, int numWords, LongPointer words) returns LLVMValueRef = external;
//public function LLVMConstIntOfArbitraryPrecision(LLVMTypeRef intTy, int numWords, LongBuffer words) returns LLVMValueRef = external;
//public function LLVMConstIntOfArbitraryPrecision(LLVMTypeRef intTy, int numWords, long[] words) returns LLVMValueRef = external;
//public function LLVMConstIntOfString(LLVMTypeRef intTy, BytePointer text, byte radix) returns LLVMValueRef = external;
//public function LLVMConstIntOfString(LLVMTypeRef intTy, string text, byte radix) returns LLVMValueRef = external;
//public function LLVMConstIntOfStringAndSize(LLVMTypeRef intTy, string text, int sLen, byte radix) returns LLVMValueRef = external;
//public function LLVMConstIntOfStringAndSize(LLVMTypeRef intTy, BytePointer text, int sLen, byte radix) returns LLVMValueRef = external;
//public function LLVMConstReal(LLVMTypeRef realTy, double n) returns LLVMValueRef = external;
public function LLVMConstRealOfString(LLVMTypeRef realTy, string text) returns LLVMValueRef = external;
//public function LLVMConstRealOfString(LLVMTypeRef realTy, BytePointer text) returns LLVMValueRef = external;
//public function LLVMConstRealOfStringAndSize(LLVMTypeRef realTy, BytePointer text, int sLen) returns LLVMValueRef = external;
public function LLVMConstRealOfStringAndSize(LLVMTypeRef realTy, string text, int sLen) returns LLVMValueRef = external;
public function LLVMConstIntGetZExtValue(LLVMValueRef constantVal) returns int = external;
public function LLVMConstIntGetSExtValue(LLVMValueRef constantVal) returns int = external;
//public function LLVMConstRealGetDouble(LLVMValueRef constantVal, IntPointer losesInfo) returns double = external;
//public function LLVMConstRealGetDouble(LLVMValueRef constantVal, int[] losesInfo) returns double = external;
//public function LLVMConstRealGetDouble(LLVMValueRef constantVal, IntBuffer losesInfo) returns double = external;
//public function LLVMConstStringInContext(LLVMContextRef c, BytePointer str, int length, int dontNullTerminate) returns LLVMValueRef = external;
public function LLVMConstStringInContext(LLVMContextRef c, string str, int length, int dontNullTerminate) returns LLVMValueRef = external;
//public function LLVMConstString(BytePointer str, int length, int dontNullTerminate) returns LLVMValueRef = external;
public function LLVMConstString(string str, int length, int dontNullTerminate) returns LLVMValueRef = external;
public function LLVMIsConstantString(LLVMValueRef c) returns int = external;
public function LLVMGetAsString(LLVMValueRef c, SizeTPointer length) returns BytePointer = external;
public function LLVMConstStructInContext0(LLVMContextRef c, LLVMValueRef constantVals, int count, int packed) returns LLVMValueRef = external;
public function LLVMConstStructInContext1(LLVMContextRef c, PointerPointer constantVals, int count, int packed) returns LLVMValueRef = external;
public function LLVMConstStruct0(LLVMValueRef constantVals, int count, int packed) returns LLVMValueRef = external;
public function LLVMConstStruct1(PointerPointer constantVals, int count, int packed) returns LLVMValueRef = external;
public function LLVMConstArray0(LLVMTypeRef elementTy, LLVMValueRef constantVals, int length) returns LLVMValueRef = external;
public function LLVMConstArray1(LLVMTypeRef elementTy, PointerPointer constantVals, int length) returns LLVMValueRef = external;
public function LLVMConstNamedStruct0(LLVMTypeRef structTy, PointerPointer constantVals, int count) returns LLVMValueRef = external;
public function LLVMConstNamedStruct1(LLVMTypeRef structTy, LLVMValueRef constantVals, int count) returns LLVMValueRef = external;
public function LLVMGetElementAsConstant(LLVMValueRef c, int idx) returns LLVMValueRef = external;
public function LLVMConstVector0(PointerPointer scalarConstantVals, int size) returns LLVMValueRef = external;
public function LLVMConstVector1(LLVMValueRef scalarConstantVals, int size) returns LLVMValueRef = external;
public function LLVMGetConstOpcode(LLVMValueRef constantVal) returns int = external;
public function LLVMAlignOf(LLVMTypeRef ty) returns LLVMValueRef = external;
public function LLVMSizeOf(LLVMTypeRef ty) returns LLVMValueRef = external;
public function LLVMConstNeg(LLVMValueRef constantVal) returns LLVMValueRef = external;
public function LLVMConstNSWNeg(LLVMValueRef constantVal) returns LLVMValueRef = external;
public function LLVMConstNUWNeg(LLVMValueRef constantVal) returns LLVMValueRef = external;
public function LLVMConstFNeg(LLVMValueRef constantVal) returns LLVMValueRef = external;
public function LLVMConstNot(LLVMValueRef constantVal) returns LLVMValueRef = external;
public function LLVMConstAdd(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstNSWAdd(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstNUWAdd(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstFAdd(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstSub(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstNSWSub(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstNUWSub(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstFSub(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstMul(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstNSWMul(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstNUWMul(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstFMul(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstUDiv(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstExactUDiv(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstSDiv(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstExactSDiv(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstFDiv(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstURem(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstSRem(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstFRem(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstAnd(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstOr(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstXor(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstICmp(int predicate, LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstFCmp(int predicate, LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstShl(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstLShr(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstAShr(LLVMValueRef lhsConstant, LLVMValueRef rhsConstant) returns LLVMValueRef = external;
public function LLVMConstGEP0(LLVMValueRef constantVal, LLVMValueRef constantIndices, int numIndices) returns LLVMValueRef = external;
public function LLVMConstGEP1(LLVMValueRef constantVal, PointerPointer constantIndices, int numIndices) returns LLVMValueRef = external;
public function LLVMConstInBoundsGEP0(LLVMValueRef constantVal, LLVMValueRef constantIndices, int numIndices) returns LLVMValueRef = external;
public function LLVMConstInBoundsGEP1(LLVMValueRef constantVal, PointerPointer constantIndices, int numIndices) returns LLVMValueRef = external;
public function LLVMConstTrunc(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstSExt(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstZExt(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstFPTrunc(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstFPExt(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstUIToFP(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstSIToFP(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstFPToUI(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstFPToSI(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstPtrToInt(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstIntToPtr(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstBitCast(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstAddrSpaceCast(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstZExtOrBitCast(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstSExtOrBitCast(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstTruncOrBitCast(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstPointerCast(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstIntCast(LLVMValueRef constantVal, LLVMTypeRef toType, int isSigned) returns LLVMValueRef = external;
public function LLVMConstFPCast(LLVMValueRef constantVal, LLVMTypeRef toType) returns LLVMValueRef = external;
public function LLVMConstSelect(LLVMValueRef constantCondition, LLVMValueRef constantIfTrue, LLVMValueRef constantIfFalse) returns LLVMValueRef = external;
public function LLVMConstExtractElement(LLVMValueRef vectorConstant, LLVMValueRef indexConstant) returns LLVMValueRef = external;
public function LLVMConstInsertElement(LLVMValueRef vectorConstant, LLVMValueRef elementValueConstant, LLVMValueRef indexConstant) returns LLVMValueRef = external;
public function LLVMConstShuffleVector(LLVMValueRef vectorAConstant, LLVMValueRef vectorBConstant, LLVMValueRef maskConstant) returns LLVMValueRef = external;
//public function LLVMConstExtractValue(LLVMValueRef aggConstant, IntPointer idxList, int numIdx) returns LLVMValueRef = external;
//public function LLVMConstExtractValue(LLVMValueRef aggConstant, IntBuffer idxList, int numIdx) returns LLVMValueRef = external;
//public function LLVMConstExtractValue(LLVMValueRef aggConstant, int[] idxList, int numIdx) returns LLVMValueRef = external;
//public function LLVMConstInsertValue(LLVMValueRef aggConstant, LLVMValueRef elementValueConstant, IntBuffer idxList, int numIdx) returns LLVMValueRef = external;
//public function LLVMConstInsertValue(LLVMValueRef aggConstant, LLVMValueRef elementValueConstant, int[] idxList, int numIdx) returns LLVMValueRef = external;
//public function LLVMConstInsertValue(LLVMValueRef aggConstant, LLVMValueRef elementValueConstant, IntPointer idxList, int numIdx) returns LLVMValueRef = external;
public function LLVMConstInlineAsm(LLVMTypeRef ty, string asmString, string constraints, int hasSideEffects, int isAlignStack) returns LLVMValueRef = external;
//public function LLVMConstInlineAsm(LLVMTypeRef ty, BytePointer asmString, BytePointer constraints, int hasSideEffects, int isAlignStack) returns LLVMValueRef = external;
public function LLVMBlockAddress(LLVMValueRef f, LLVMBasicBlockRef bb) returns LLVMValueRef = external;
public function LLVMGetGlobalParent(LLVMValueRef global) returns LLVMModuleRef = external;
public function LLVMIsDeclaration(LLVMValueRef global) returns int = external;
public function LLVMGetLinkage(LLVMValueRef global) returns int = external;
public function LLVMSetLinkage(LLVMValueRef global, int linkage) = external;
public function LLVMGetSection(LLVMValueRef global) returns BytePointer = external;
public function LLVMSetSection(LLVMValueRef global, string section) = external;
//public function LLVMSetSection(LLVMValueRef global, BytePointer section) = external;
public function LLVMGetVisibility(LLVMValueRef global) returns int = external;
public function LLVMSetVisibility(LLVMValueRef global, int viz) = external;
public function LLVMGetDLLStorageClass(LLVMValueRef global) returns int = external;
public function LLVMSetDLLStorageClass(LLVMValueRef global, int classValue) = external;
public function LLVMHasUnnamedAddr(LLVMValueRef global) returns int = external;
public function LLVMSetUnnamedAddr(LLVMValueRef global, int hasUnnamedAddr) = external;
public function LLVMGetAlignment(LLVMValueRef v) returns int = external;
public function LLVMSetAlignment(LLVMValueRef v, int bytes) = external;
//public function LLVMAddGlobal(LLVMModuleRef m, LLVMTypeRef ty, BytePointer name) returns LLVMValueRef = external;
public function LLVMAddGlobal(LLVMModuleRef m, LLVMTypeRef ty, string name) returns LLVMValueRef = external;
public function LLVMAddGlobalInAddressSpace(LLVMModuleRef m, LLVMTypeRef ty, string name, int addressSpace) returns LLVMValueRef = external;
//public function LLVMAddGlobalInAddressSpace(LLVMModuleRef m, LLVMTypeRef ty, BytePointer name, int addressSpace) returns LLVMValueRef = external;
public function LLVMGetNamedGlobal(LLVMModuleRef m, string name) returns LLVMValueRef = external;
//public function LLVMGetNamedGlobal(LLVMModuleRef m, BytePointer name) returns LLVMValueRef = external;
public function LLVMGetFirstGlobal(LLVMModuleRef m) returns LLVMValueRef = external;
public function LLVMGetLastGlobal(LLVMModuleRef m) returns LLVMValueRef = external;
public function LLVMGetNextGlobal(LLVMValueRef globalVar) returns LLVMValueRef = external;
public function LLVMGetPreviousGlobal(LLVMValueRef globalVar) returns LLVMValueRef = external;
public function LLVMDeleteGlobal(LLVMValueRef globalVar) = external;
public function LLVMGetInitializer(LLVMValueRef globalVar) returns LLVMValueRef = external;
public function LLVMSetInitializer(LLVMValueRef globalVar, LLVMValueRef constantVal) = external;
public function LLVMIsThreadLocal(LLVMValueRef globalVar) returns int = external;
public function LLVMSetThreadLocal(LLVMValueRef globalVar, int isThreadLocal) = external;
public function LLVMIsGlobalConstant(LLVMValueRef globalVar) returns int = external;
public function LLVMSetGlobalConstant(LLVMValueRef globalVar, int isConstant) = external;
public function LLVMGetThreadLocalMode(LLVMValueRef globalVar) returns int = external;
public function LLVMSetThreadLocalMode(LLVMValueRef globalVar, int mode) = external;
public function LLVMIsExternallyInitialized(LLVMValueRef globalVar) returns int = external;
public function LLVMSetExternallyInitialized(LLVMValueRef globalVar, int isExtInit) = external;
public function LLVMAddAlias(LLVMModuleRef m, LLVMTypeRef ty, LLVMValueRef aliasee, string name) returns LLVMValueRef = external;
//public function LLVMAddAlias(LLVMModuleRef m, LLVMTypeRef ty, LLVMValueRef aliasee, BytePointer name) returns LLVMValueRef = external;
public function LLVMDeleteFunction(LLVMValueRef fn) = external;
public function LLVMHasPersonalityFn(LLVMValueRef fn) returns int = external;
public function LLVMGetPersonalityFn(LLVMValueRef fn) returns LLVMValueRef = external;
public function LLVMSetPersonalityFn(LLVMValueRef fn, LLVMValueRef personalityFn) = external;
public function LLVMGetIntrinsicID(LLVMValueRef fn) returns int = external;
public function LLVMGetFunctionCallConv(LLVMValueRef fn) returns int = external;
public function LLVMSetFunctionCallConv(LLVMValueRef fn, int cc) = external;
public function LLVMGetGC(LLVMValueRef fn) returns BytePointer = external;
//public function LLVMSetGC(LLVMValueRef fn, BytePointer name) = external;
public function LLVMSetGC(LLVMValueRef fn, string name) = external;
public function LLVMAddAttributeAtIndex(LLVMValueRef f, int idx, LLVMAttributeRef a) = external;
public function LLVMGetAttributeCountAtIndex(LLVMValueRef f, int idx) returns int = external;
public function LLVMGetAttributesAtIndex0(LLVMValueRef f, int idx, PointerPointer attrs) = external;
public function LLVMGetAttributesAtIndex1(LLVMValueRef f, int idx, LLVMAttributeRef attrs) = external;
public function LLVMGetEnumAttributeAtIndex(LLVMValueRef f, int idx, int kindID) returns LLVMAttributeRef = external;
//public function LLVMGetStringAttributeAtIndex(LLVMValueRef f, int idx, BytePointer k, int kLen) returns LLVMAttributeRef = external;
public function LLVMGetStringAttributeAtIndex(LLVMValueRef f, int idx, string k, int kLen) returns LLVMAttributeRef = external;
public function LLVMRemoveEnumAttributeAtIndex(LLVMValueRef f, int idx, int kindID) = external;
//public function LLVMRemoveStringAttributeAtIndex(LLVMValueRef f, int idx, BytePointer k, int kLen) = external;
public function LLVMRemoveStringAttributeAtIndex(LLVMValueRef f, int idx, string k, int kLen) = external;
public function LLVMAddTargetDependentFunctionAttr(LLVMValueRef fn, string a, string v) = external;
//public function LLVMAddTargetDependentFunctionAttr(LLVMValueRef fn, BytePointer a, BytePointer v) = external;
public function LLVMCountParams(LLVMValueRef fn) returns int = external;
public function LLVMGetParams0(LLVMValueRef fn, PointerPointer params) = external;
public function LLVMGetParams1(LLVMValueRef fn, LLVMValueRef params) = external;
public function LLVMGetParam(LLVMValueRef fn, int index) returns LLVMValueRef = external;
public function LLVMGetParamParent(LLVMValueRef inst) returns LLVMValueRef = external;
public function LLVMGetFirstParam(LLVMValueRef fn) returns LLVMValueRef = external;
public function LLVMGetLastParam(LLVMValueRef fn) returns LLVMValueRef = external;
public function LLVMGetNextParam(LLVMValueRef arg) returns LLVMValueRef = external;
public function LLVMGetPreviousParam(LLVMValueRef arg) returns LLVMValueRef = external;
public function LLVMSetParamAlignment(LLVMValueRef arg, int align) = external;
//public function LLVMMDStringInContext(LLVMContextRef c, BytePointer str, int sLen) returns LLVMValueRef = external;
public function LLVMMDStringInContext(LLVMContextRef c, string str, int sLen) returns LLVMValueRef = external;
//public function LLVMMDString(BytePointer str, int sLen) returns LLVMValueRef = external;
public function LLVMMDString(string str, int sLen) returns LLVMValueRef = external;
public function LLVMMDNodeInContext0(LLVMContextRef c, PointerPointer vals, int count) returns LLVMValueRef = external;
public function LLVMMDNodeInContext1(LLVMContextRef c, LLVMValueRef vals, int count) returns LLVMValueRef = external;
public function LLVMMDNode0(LLVMValueRef vals, int count) returns LLVMValueRef = external;
public function LLVMMDNode1(PointerPointer vals, int count) returns LLVMValueRef = external;
public function LLVMMetadataAsValue(LLVMContextRef c, LLVMMetadataRef md) returns LLVMValueRef = external;
public function LLVMValueAsMetadata(LLVMValueRef val) returns LLVMMetadataRef = external;
//public function LLVMGetMDString(LLVMValueRef v, int[] length) returns BytePointer = external;
//public function LLVMGetMDString(LLVMValueRef v, IntPointer length) returns BytePointer = external;
//public function LLVMGetMDString(LLVMValueRef v, IntBuffer length) returns string = external;
public function LLVMGetMDNodeNumOperands(LLVMValueRef v) returns int = external;
public function LLVMGetMDNodeOperands0(LLVMValueRef v, LLVMValueRef dest) = external;
public function LLVMGetMDNodeOperands1(LLVMValueRef v, PointerPointer dest) = external;
public function LLVMBasicBlockAsValue(LLVMBasicBlockRef bb) returns LLVMValueRef = external;
public function LLVMValueIsBasicBlock(LLVMValueRef val) returns int = external;
public function LLVMValueAsBasicBlock(LLVMValueRef val) returns LLVMBasicBlockRef = external;
public function LLVMGetBasicBlockName(LLVMBasicBlockRef bb) returns BytePointer = external;
public function LLVMGetBasicBlockParent(LLVMBasicBlockRef bb) returns LLVMValueRef = external;
public function LLVMGetBasicBlockTerminator(LLVMBasicBlockRef bb) returns LLVMValueRef = external;
public function LLVMCountBasicBlocks(LLVMValueRef fn) returns int = external;
public function LLVMGetBasicBlocks0(LLVMValueRef fn, LLVMBasicBlockRef basicBlocks) = external;
public function LLVMGetBasicBlocks1(LLVMValueRef fn, PointerPointer basicBlocks) = external;
public function LLVMGetFirstBasicBlock(LLVMValueRef fn) returns LLVMBasicBlockRef = external;
public function LLVMGetLastBasicBlock(LLVMValueRef fn) returns LLVMBasicBlockRef = external;
public function LLVMGetNextBasicBlock(LLVMBasicBlockRef bb) returns LLVMBasicBlockRef = external;
public function LLVMGetPreviousBasicBlock(LLVMBasicBlockRef bb) returns LLVMBasicBlockRef = external;
public function LLVMGetEntryBasicBlock(LLVMValueRef fn) returns LLVMBasicBlockRef = external;
//public function LLVMAppendBasicBlockInContext(LLVMContextRef c, LLVMValueRef fn, BytePointer name) returns LLVMBasicBlockRef = external;
public function LLVMAppendBasicBlockInContext(LLVMContextRef c, LLVMValueRef fn, string name) returns LLVMBasicBlockRef = external;
//public function LLVMAppendBasicBlock(LLVMValueRef fn, BytePointer name) returns LLVMBasicBlockRef = external;
public function LLVMAppendBasicBlock(LLVMValueRef fn, string name) returns LLVMBasicBlockRef = external;
//public function LLVMInsertBasicBlockInContext(LLVMContextRef c, LLVMBasicBlockRef bb, BytePointer name) returns LLVMBasicBlockRef = external;
public function LLVMInsertBasicBlockInContext(LLVMContextRef c, LLVMBasicBlockRef bb, string name) returns LLVMBasicBlockRef = external;
public function LLVMInsertBasicBlock(LLVMBasicBlockRef insertBeforeBB, string name) returns LLVMBasicBlockRef = external;
//public function LLVMInsertBasicBlock(LLVMBasicBlockRef insertBeforeBB, BytePointer name) returns LLVMBasicBlockRef = external;
public function LLVMDeleteBasicBlock(LLVMBasicBlockRef bb) = external;
public function LLVMRemoveBasicBlockFromParent(LLVMBasicBlockRef bb) = external;
public function LLVMMoveBasicBlockBefore(LLVMBasicBlockRef bb, LLVMBasicBlockRef movePos) = external;
public function LLVMMoveBasicBlockAfter(LLVMBasicBlockRef bb, LLVMBasicBlockRef movePos) = external;
public function LLVMGetFirstInstruction(LLVMBasicBlockRef bb) returns LLVMValueRef = external;
public function LLVMGetLastInstruction(LLVMBasicBlockRef bb) returns LLVMValueRef = external;
public function LLVMHasMetadata(LLVMValueRef val) returns int = external;
public function LLVMGetMetadata(LLVMValueRef val, int kindID) returns LLVMValueRef = external;
public function LLVMSetMetadata(LLVMValueRef val, int kindID, LLVMValueRef node) = external;
public function LLVMGetInstructionParent(LLVMValueRef inst) returns LLVMBasicBlockRef = external;
public function LLVMGetNextInstruction(LLVMValueRef inst) returns LLVMValueRef = external;
public function LLVMGetPreviousInstruction(LLVMValueRef inst) returns LLVMValueRef = external;
public function LLVMInstructionRemoveFromParent(LLVMValueRef inst) = external;
public function LLVMInstructionEraseFromParent(LLVMValueRef inst) = external;
public function LLVMGetInstructionOpcode(LLVMValueRef inst) returns int = external;
public function LLVMGetICmpPredicate(LLVMValueRef inst) returns int = external;
public function LLVMGetFCmpPredicate(LLVMValueRef inst) returns int = external;
public function LLVMInstructionClone(LLVMValueRef inst) returns LLVMValueRef = external;
public function LLVMGetNumArgOperands(LLVMValueRef instr) returns int = external;
public function LLVMSetInstructionCallConv(LLVMValueRef instr, int cc) = external;
public function LLVMGetInstructionCallConv(LLVMValueRef instr) returns int = external;
public function LLVMSetInstrParamAlignment(LLVMValueRef instr, int index, int align) = external;
public function LLVMAddCallSiteAttribute(LLVMValueRef c, int idx, LLVMAttributeRef a) = external;
public function LLVMGetCallSiteAttributeCount(LLVMValueRef c, int idx) returns int = external;
public function LLVMGetCallSiteAttributes0(LLVMValueRef c, int idx, PointerPointer attrs) = external;
public function LLVMGetCallSiteAttributes1(LLVMValueRef c, int idx, LLVMAttributeRef attrs) = external;
public function LLVMGetCallSiteEnumAttribute(LLVMValueRef c, int idx, int kindID) returns LLVMAttributeRef = external;
public function LLVMGetCallSiteStringAttribute(LLVMValueRef c, int idx, string k, int kLen) returns LLVMAttributeRef = external;
//public function LLVMGetCallSiteStringAttribute(LLVMValueRef c, int idx, BytePointer k, int kLen) returns LLVMAttributeRef = external;
public function LLVMRemoveCallSiteEnumAttribute(LLVMValueRef c, int idx, int kindID) = external;
//public function LLVMRemoveCallSiteStringAttribute(LLVMValueRef c, int idx, BytePointer k, int kLen) = external;
public function LLVMRemoveCallSiteStringAttribute(LLVMValueRef c, int idx, string k, int kLen) = external;
public function LLVMGetCalledValue(LLVMValueRef instr) returns LLVMValueRef = external;
public function LLVMIsTailCall(LLVMValueRef callInst) returns int = external;
public function LLVMSetTailCall(LLVMValueRef callInst, int isTailCall) = external;
public function LLVMGetNormalDest(LLVMValueRef invokeInst) returns LLVMBasicBlockRef = external;
public function LLVMGetUnwindDest(LLVMValueRef invokeInst) returns LLVMBasicBlockRef = external;
public function LLVMSetNormalDest(LLVMValueRef invokeInst, LLVMBasicBlockRef b) = external;
public function LLVMSetUnwindDest(LLVMValueRef invokeInst, LLVMBasicBlockRef b) = external;
public function LLVMGetNumSuccessors(LLVMValueRef term) returns int = external;
public function LLVMGetSuccessor(LLVMValueRef term, int i) returns LLVMBasicBlockRef = external;
public function LLVMSetSuccessor(LLVMValueRef term, int i, LLVMBasicBlockRef block) = external;
public function LLVMIsConditional(LLVMValueRef branch) returns int = external;
public function LLVMGetCondition(LLVMValueRef branch) returns LLVMValueRef = external;
public function LLVMSetCondition(LLVMValueRef branch, LLVMValueRef cond) = external;
public function LLVMGetSwitchDefaultDest(LLVMValueRef switchInstr) returns LLVMBasicBlockRef = external;
public function LLVMGetAllocatedType(LLVMValueRef alloca) returns LLVMTypeRef = external;
public function LLVMIsInBounds(LLVMValueRef gep) returns int = external;
public function LLVMSetIsInBounds(LLVMValueRef gep, int inBounds) = external;
public function LLVMAddIncoming0(LLVMValueRef phiNode, LLVMValueRef incomingValues, LLVMBasicBlockRef incomingBlocks, int count) = external;
public function LLVMAddIncoming1(LLVMValueRef phiNode, PointerPointer incomingValues, PointerPointer incomingBlocks, int count) = external;
public function LLVMCountIncoming(LLVMValueRef phiNode) returns int = external;
public function LLVMGetIncomingValue(LLVMValueRef phiNode, int index) returns LLVMValueRef = external;
public function LLVMGetIncomingBlock(LLVMValueRef phiNode, int index) returns LLVMBasicBlockRef = external;
public function LLVMGetNumIndices(LLVMValueRef inst) returns int = external;
public function LLVMGetIndices(LLVMValueRef inst) returns IntPointer = external;
public function LLVMCreateBuilderInContext(LLVMContextRef c) returns LLVMBuilderRef = external;
public function LLVMCreateBuilder() returns LLVMBuilderRef = external;
public function LLVMPositionBuilder(LLVMBuilderRef builder, LLVMBasicBlockRef block, LLVMValueRef instr) = external;
public function LLVMPositionBuilderBefore(LLVMBuilderRef builder, LLVMValueRef instr) = external;
public function LLVMPositionBuilderAtEnd(LLVMBuilderRef builder, LLVMBasicBlockRef block) = external;
public function LLVMGetInsertBlock(LLVMBuilderRef builder) returns LLVMBasicBlockRef = external;
public function LLVMClearInsertionPosition(LLVMBuilderRef builder) = external;
public function LLVMInsertIntoBuilder(LLVMBuilderRef builder, LLVMValueRef instr) = external;
public function LLVMInsertIntoBuilderWithName(LLVMBuilderRef builder, LLVMValueRef instr, string name) = external;
//public function LLVMInsertIntoBuilderWithName(LLVMBuilderRef builder, LLVMValueRef instr, BytePointer name) = external;
public function LLVMDisposeBuilder(LLVMBuilderRef builder) = external;
public function LLVMSetCurrentDebugLocation(LLVMBuilderRef builder, LLVMValueRef l) = external;
public function LLVMGetCurrentDebugLocation(LLVMBuilderRef builder) returns LLVMValueRef = external;
public function LLVMSetInstDebugLocation(LLVMBuilderRef builder, LLVMValueRef inst) = external;
public function LLVMBuildRetVoid(LLVMBuilderRef arg0) returns LLVMValueRef = external;
public function LLVMBuildRet(LLVMBuilderRef arg0, LLVMValueRef v) returns LLVMValueRef = external;
public function LLVMBuildAggregateRet0(LLVMBuilderRef arg0, PointerPointer retVals, int n) returns LLVMValueRef = external;
public function LLVMBuildAggregateRet1(LLVMBuilderRef arg0, LLVMValueRef retVals, int n) returns LLVMValueRef = external;
public function LLVMBuildBr(LLVMBuilderRef arg0, LLVMBasicBlockRef dest) returns LLVMValueRef = external;
public function LLVMBuildCondBr(LLVMBuilderRef arg0, LLVMValueRef ifValue, LLVMBasicBlockRef then, LLVMBasicBlockRef elseValue) returns LLVMValueRef = external;
public function LLVMBuildSwitch(LLVMBuilderRef arg0, LLVMValueRef v, LLVMBasicBlockRef elseValue, int numCases) returns LLVMValueRef = external;
public function LLVMBuildIndirectBr(LLVMBuilderRef b, LLVMValueRef addr, int numDests) returns LLVMValueRef = external;
//public function LLVMBuildInvoke(LLVMBuilderRef arg0, LLVMValueRef fn, LLVMValueRef args, int numArgs, LLVMBasicBlockRef then, LLVMBasicBlockRef catchValue, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildInvoke(LLVMBuilderRef arg0, LLVMValueRef fn, PointerPointer args, int numArgs, LLVMBasicBlockRef then, LLVMBasicBlockRef catchValue, string name) returns LLVMValueRef = external;
public function LLVMBuildLandingPad(LLVMBuilderRef b, LLVMTypeRef ty, LLVMValueRef persFn, int numClauses, string name) returns LLVMValueRef = external;
//public function LLVMBuildLandingPad(LLVMBuilderRef b, LLVMTypeRef ty, LLVMValueRef persFn, int numClauses, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildResume(LLVMBuilderRef b, LLVMValueRef exn) returns LLVMValueRef = external;
public function LLVMBuildUnreachable(LLVMBuilderRef arg0) returns LLVMValueRef = external;
public function LLVMAddCase(LLVMValueRef switchValue, LLVMValueRef onVal, LLVMBasicBlockRef dest) = external;
public function LLVMAddDestination(LLVMValueRef indirectBr, LLVMBasicBlockRef dest) = external;
public function LLVMGetNumClauses(LLVMValueRef landingPad) returns int = external;
public function LLVMGetClause(LLVMValueRef landingPad, int idx) returns LLVMValueRef = external;
public function LLVMAddClause(LLVMValueRef landingPad, LLVMValueRef clauseVal) = external;
public function LLVMIsCleanup(LLVMValueRef landingPad) returns int = external;
public function LLVMSetCleanup(LLVMValueRef landingPad, int val) = external;
public function LLVMBuildAdd(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildAdd(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildNSWAdd(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildNSWAdd(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
public function LLVMBuildNUWAdd(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildNUWAdd(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildFAdd(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildFAdd(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildSub(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildSub(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildNSWSub(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildNSWSub(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildNUWSub(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildNUWSub(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildFSub(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildFSub(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildMul(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildMul(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildNSWMul(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildNSWMul(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildNUWMul(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildNUWMul(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
public function LLVMBuildFMul(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildFMul(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildUDiv(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildUDiv(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildExactUDiv(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildExactUDiv(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildSDiv(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildSDiv(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
public function LLVMBuildExactSDiv(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildExactSDiv(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildFDiv(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildFDiv(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
public function LLVMBuildURem(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildURem(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildSRem(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildSRem(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildFRem(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildFRem(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildShl(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildShl(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildLShr(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildLShr(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
public function LLVMBuildAShr(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildAShr(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildAnd(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildAnd(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
public function LLVMBuildOr(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildOr(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildXor(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildXor(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
public function LLVMBuildBinOp(LLVMBuilderRef b, int op, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildBinOp(LLVMBuilderRef b, int op, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildNeg(LLVMBuilderRef arg0, LLVMValueRef v, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildNeg(LLVMBuilderRef arg0, LLVMValueRef v, string name) returns LLVMValueRef = external;
//public function LLVMBuildNSWNeg(LLVMBuilderRef b, LLVMValueRef v, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildNSWNeg(LLVMBuilderRef b, LLVMValueRef v, string name) returns LLVMValueRef = external;
//public function LLVMBuildNUWNeg(LLVMBuilderRef b, LLVMValueRef v, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildNUWNeg(LLVMBuilderRef b, LLVMValueRef v, string name) returns LLVMValueRef = external;
//public function LLVMBuildFNeg(LLVMBuilderRef arg0, LLVMValueRef v, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildFNeg(LLVMBuilderRef arg0, LLVMValueRef v, string name) returns LLVMValueRef = external;
public function LLVMBuildNot(LLVMBuilderRef arg0, LLVMValueRef v, string name) returns LLVMValueRef = external;
//public function LLVMBuildNot(LLVMBuilderRef arg0, LLVMValueRef v, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildMalloc(LLVMBuilderRef arg0, LLVMTypeRef ty, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildMalloc(LLVMBuilderRef arg0, LLVMTypeRef ty, string name) returns LLVMValueRef = external;
public function LLVMBuildArrayMalloc(LLVMBuilderRef arg0, LLVMTypeRef ty, LLVMValueRef val, string name) returns LLVMValueRef = external;
//public function LLVMBuildArrayMalloc(LLVMBuilderRef arg0, LLVMTypeRef ty, LLVMValueRef val, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildAlloca(LLVMBuilderRef arg0, LLVMTypeRef ty, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildAlloca(LLVMBuilderRef arg0, LLVMTypeRef ty, string name) returns LLVMValueRef = external;
public function LLVMBuildArrayAlloca(LLVMBuilderRef arg0, LLVMTypeRef ty, LLVMValueRef val, string name) returns LLVMValueRef = external;
//public function LLVMBuildArrayAlloca(LLVMBuilderRef arg0, LLVMTypeRef ty, LLVMValueRef val, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildFree(LLVMBuilderRef arg0, LLVMValueRef pointerVal) returns LLVMValueRef = external;
//public function LLVMBuildLoad(LLVMBuilderRef arg0, LLVMValueRef pointerVal, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildLoad(LLVMBuilderRef arg0, LLVMValueRef pointerVal, string name) returns LLVMValueRef = external;
public function LLVMBuildStore(LLVMBuilderRef arg0, LLVMValueRef val, LLVMValueRef ptr) returns LLVMValueRef = external;
public function LLVMBuildGEP(LLVMBuilderRef b, LLVMValueRef pointer, PointerPointer indices, int numIndices, string name) returns LLVMValueRef = external;
//public function LLVMBuildGEP(LLVMBuilderRef b, LLVMValueRef pointer, LLVMValueRef indices, int numIndices, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildInBoundsGEP(LLVMBuilderRef b, LLVMValueRef pointer, LLVMValueRef indices, int numIndices, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildInBoundsGEP(LLVMBuilderRef b, LLVMValueRef pointer, PointerPointer indices, int numIndices, string name) returns LLVMValueRef = external;
public function LLVMBuildStructGEP(LLVMBuilderRef b, LLVMValueRef pointer, int idx, string name) returns LLVMValueRef = external;
//public function LLVMBuildStructGEP(LLVMBuilderRef b, LLVMValueRef pointer, int idx, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildGlobalString(LLVMBuilderRef b, BytePointer str, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildGlobalString(LLVMBuilderRef b, string str, string name) returns LLVMValueRef = external;
//public function LLVMBuildGlobalStringPtr(LLVMBuilderRef b, BytePointer str, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildGlobalStringPtr(LLVMBuilderRef b, string str, string name) returns LLVMValueRef = external;
public function LLVMGetVolatile(LLVMValueRef memoryAccessInst) returns int = external;
public function LLVMSetVolatile(LLVMValueRef memoryAccessInst, int isVolatile) = external;
public function LLVMGetOrdering(LLVMValueRef memoryAccessInst) returns int = external;
public function LLVMSetOrdering(LLVMValueRef memoryAccessInst, int ordering) = external;
public function LLVMBuildTrunc(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildTrunc(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildZExt(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildZExt(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildSExt(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildSExt(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
public function LLVMBuildFPToUI(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildFPToUI(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildFPToSI(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildFPToSI(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildUIToFP(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildUIToFP(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildSIToFP(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildSIToFP(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
public function LLVMBuildFPTrunc(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildFPTrunc(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildFPExt(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildFPExt(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildPtrToInt(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildPtrToInt(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildIntToPtr(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildIntToPtr(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
public function LLVMBuildBitCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildBitCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildAddrSpaceCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildAddrSpaceCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
public function LLVMBuildZExtOrBitCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildZExtOrBitCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildSExtOrBitCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildSExtOrBitCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
public function LLVMBuildTruncOrBitCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildTruncOrBitCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildCast(LLVMBuilderRef b, int op, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildCast(LLVMBuilderRef b, int op, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildPointerCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildPointerCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildIntCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildIntCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildFPCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildFPCast(LLVMBuilderRef arg0, LLVMValueRef val, LLVMTypeRef destTy, string name) returns LLVMValueRef = external;
//public function LLVMBuildICmp(LLVMBuilderRef arg0, int op, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildICmp(LLVMBuilderRef arg0, int op, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
public function LLVMBuildFCmp(LLVMBuilderRef arg0, int op, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
//public function LLVMBuildFCmp(LLVMBuilderRef arg0, int op, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildPhi(LLVMBuilderRef arg0, LLVMTypeRef ty, string name) returns LLVMValueRef = external;
//public function LLVMBuildPhi(LLVMBuilderRef arg0, LLVMTypeRef ty, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildCall(LLVMBuilderRef arg0, LLVMValueRef fn, PointerPointer args, int numArgs, string name) returns LLVMValueRef = external;
public function LLVMBuildCall(LLVMBuilderRef arg0, LLVMValueRef fn, LLVMValueRef[] args, int numArgs, string name) returns LLVMValueRef = external;
//public function LLVMBuildSelect(LLVMBuilderRef arg0, LLVMValueRef ifValue, LLVMValueRef then, LLVMValueRef elseValue, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildSelect(LLVMBuilderRef arg0, LLVMValueRef ifValue, LLVMValueRef then, LLVMValueRef elseValue, string name) returns LLVMValueRef = external;
public function LLVMBuildVAArg(LLVMBuilderRef arg0, LLVMValueRef list, LLVMTypeRef ty, string name) returns LLVMValueRef = external;
//public function LLVMBuildVAArg(LLVMBuilderRef arg0, LLVMValueRef list, LLVMTypeRef ty, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildExtractElement(LLVMBuilderRef arg0, LLVMValueRef vecVal, LLVMValueRef index, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildExtractElement(LLVMBuilderRef arg0, LLVMValueRef vecVal, LLVMValueRef index, string name) returns LLVMValueRef = external;
public function LLVMBuildInsertElement(LLVMBuilderRef arg0, LLVMValueRef vecVal, LLVMValueRef eltVal, LLVMValueRef index, string name) returns LLVMValueRef = external;
//public function LLVMBuildInsertElement(LLVMBuilderRef arg0, LLVMValueRef vecVal, LLVMValueRef eltVal, LLVMValueRef index, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildShuffleVector(LLVMBuilderRef arg0, LLVMValueRef v1, LLVMValueRef v2, LLVMValueRef mask, string name) returns LLVMValueRef = external;
//public function LLVMBuildShuffleVector(LLVMBuilderRef arg0, LLVMValueRef v1, LLVMValueRef v2, LLVMValueRef mask, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildExtractValue(LLVMBuilderRef arg0, LLVMValueRef aggVal, int index, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildExtractValue(LLVMBuilderRef arg0, LLVMValueRef aggVal, int index, string name) returns LLVMValueRef = external;
public function LLVMBuildInsertValue(LLVMBuilderRef arg0, LLVMValueRef aggVal, LLVMValueRef eltVal, int index, string name) returns LLVMValueRef = external;
//public function LLVMBuildInsertValue(LLVMBuilderRef arg0, LLVMValueRef aggVal, LLVMValueRef eltVal, int index, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildIsNull(LLVMBuilderRef arg0, LLVMValueRef val, string name) returns LLVMValueRef = external;
//public function LLVMBuildIsNull(LLVMBuilderRef arg0, LLVMValueRef val, BytePointer name) returns LLVMValueRef = external;
//public function LLVMBuildIsNotNull(LLVMBuilderRef arg0, LLVMValueRef val, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildIsNotNull(LLVMBuilderRef arg0, LLVMValueRef val, string name) returns LLVMValueRef = external;
//public function LLVMBuildPtrDiff(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildPtrDiff(LLVMBuilderRef arg0, LLVMValueRef lhs, LLVMValueRef rhs, string name) returns LLVMValueRef = external;
public function LLVMBuildFence(LLVMBuilderRef b, int ordering, int singleThread, string name) returns LLVMValueRef = external;
//public function LLVMBuildFence(LLVMBuilderRef b, int ordering, int singleThread, BytePointer name) returns LLVMValueRef = external;
public function LLVMBuildAtomicRMW(LLVMBuilderRef b, int op, LLVMValueRef ptr, LLVMValueRef val, int ordering, int singleThread) returns LLVMValueRef = external;
public function LLVMBuildAtomicCmpXchg(LLVMBuilderRef b, LLVMValueRef ptr, LLVMValueRef cmp, LLVMValueRef newValue, int successOrdering, int failureOrdering, int singleThread) returns LLVMValueRef = external;
public function LLVMIsAtomicSingleThread(LLVMValueRef atomicInst) returns int = external;
public function LLVMSetAtomicSingleThread(LLVMValueRef atomicInst, int singleThread) = external;
public function LLVMGetCmpXchgSuccessOrdering(LLVMValueRef cmpXchgInst) returns int = external;
public function LLVMSetCmpXchgSuccessOrdering(LLVMValueRef cmpXchgInst, int ordering) = external;
public function LLVMGetCmpXchgFailureOrdering(LLVMValueRef cmpXchgInst) returns int = external;
public function LLVMSetCmpXchgFailureOrdering(LLVMValueRef cmpXchgInst, int ordering) = external;
public function LLVMCreateModuleProviderForExistingModule(LLVMModuleRef m) returns LLVMModuleProviderRef = external;
public function LLVMDisposeModuleProvider(LLVMModuleProviderRef m) = external;
//public function LLVMCreateMemoryBufferWithContentsOfFile(string path, PointerPointer outMemBuf, ByteBuffer outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithContentsOfFile(BytePointer path, LLVMMemoryBufferRef outMemBuf, byte[] outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithContentsOfFile(string path, PointerPointer outMemBuf, BytePointer outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithContentsOfFile(BytePointer path, LLVMMemoryBufferRef outMemBuf, ByteBuffer outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithContentsOfFile(string path, PointerPointer outMemBuf, byte[] outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithContentsOfFile(BytePointer path, LLVMMemoryBufferRef outMemBuf, PointerPointer outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithContentsOfFile(BytePointer path, LLVMMemoryBufferRef outMemBuf, BytePointer outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithSTDIN0(LLVMMemoryBufferRef outMemBuf, byte[] outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithSTDIN(PointerPointer outMemBuf, BytePointer outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithSTDIN(LLVMMemoryBufferRef outMemBuf, ByteBuffer outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithSTDIN1(PointerPointer outMemBuf, byte[] outMessage) returns int = external;
public function LLVMCreateMemoryBufferWithSTDIN2(LLVMMemoryBufferRef outMemBuf, PointerPointer outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithSTDIN(LLVMMemoryBufferRef outMemBuf, BytePointer outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithSTDIN(PointerPointer outMemBuf, ByteBuffer outMessage) returns int = external;
//public function LLVMCreateMemoryBufferWithMemoryRange(BytePointer inputData, int inputDataLength, BytePointer bufferName, int requiresNullTerminator) returns LLVMMemoryBufferRef = external;
public function LLVMCreateMemoryBufferWithMemoryRange(string inputData, int inputDataLength, string bufferName, int requiresNullTerminator) returns LLVMMemoryBufferRef = external;
public function LLVMCreateMemoryBufferWithMemoryRangeCopy(string inputData, int inputDataLength, string bufferName) returns LLVMMemoryBufferRef = external;
//public function LLVMCreateMemoryBufferWithMemoryRangeCopy(BytePointer inputData, int inputDataLength, BytePointer bufferName) returns LLVMMemoryBufferRef = external;
public function LLVMGetBufferStart(LLVMMemoryBufferRef memBuf) returns BytePointer = external;
public function LLVMGetBufferSize(LLVMMemoryBufferRef memBuf) returns int = external;
public function LLVMDisposeMemoryBuffer(LLVMMemoryBufferRef memBuf) = external;
public function LLVMGetGlobalPassRegistry() returns LLVMPassRegistryRef = external;
public function LLVMCreatePassManager() returns LLVMPassManagerRef = external;
public function LLVMCreateFunctionPassManagerForModule(LLVMModuleRef m) returns LLVMPassManagerRef = external;
public function LLVMCreateFunctionPassManager(LLVMModuleProviderRef mp) returns LLVMPassManagerRef = external;
public function LLVMRunPassManager(LLVMPassManagerRef pm, LLVMModuleRef m) returns int = external;
public function LLVMInitializeFunctionPassManager(LLVMPassManagerRef fpm) returns int = external;
public function LLVMRunFunctionPassManager(LLVMPassManagerRef fpm, LLVMValueRef f) returns int = external;
public function LLVMFinalizeFunctionPassManager(LLVMPassManagerRef fpm) returns int = external;
public function LLVMDisposePassManager(LLVMPassManagerRef pm) = external;
public function LLVMStartMultithreaded() returns int = external;
public function LLVMStopMultithreaded() = external;
public function LLVMIsMultithreaded() returns int = external;
//public function LLVMVerifyModule(LLVMModuleRef m, int action, ByteBuffer outMessage) returns int = external;
//public function LLVMVerifyModule0(LLVMModuleRef m, int action, byte[] outMessage) returns int = external;
//public function LLVMVerifyModule(LLVMModuleRef m, int action, BytePointer outMessage) returns int = external;
public function LLVMVerifyModule1(LLVMModuleRef m, int action, PointerPointer outMessage) returns int = external;
public function LLVMVerifyFunction(LLVMValueRef fn, int action) returns int = external;
public function LLVMViewFunctionCFG(LLVMValueRef fn) = external;
public function LLVMViewFunctionCFGOnly(LLVMValueRef fn) = external;
//public function LLVMParseBitcode(LLVMMemoryBufferRef memBuf, PointerPointer outModule, ByteBuffer outMessage) returns int = external;
//public function LLVMParseBitcode(LLVMMemoryBufferRef memBuf, PointerPointer outModule, BytePointer outMessage) returns int = external;
//public function LLVMParseBitcode(LLVMMemoryBufferRef memBuf, LLVMModuleRef outModule, ByteBuffer outMessage) returns int = external;
//public function LLVMParseBitcode0(LLVMMemoryBufferRef memBuf, PointerPointer outModule, byte[] outMessage) returns int = external;
public function LLVMParseBitcode1(LLVMMemoryBufferRef memBuf, LLVMModuleRef outModule, PointerPointer outMessage) returns int = external;
//public function LLVMParseBitcode(LLVMMemoryBufferRef memBuf, LLVMModuleRef outModule, BytePointer outMessage) returns int = external;
//public function LLVMParseBitcode2(LLVMMemoryBufferRef memBuf, LLVMModuleRef outModule, byte[] outMessage) returns int = external;
public function LLVMParseBitcode20(LLVMMemoryBufferRef memBuf, LLVMModuleRef outModule) returns int = external;
public function LLVMParseBitcode21(LLVMMemoryBufferRef memBuf, PointerPointer outModule) returns int = external;
//public function LLVMParseBitcodeInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, PointerPointer outModule, BytePointer outMessage) returns int = external;
//public function LLVMParseBitcodeInContext0(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outModule, byte[] outMessage) returns int = external;
//public function LLVMParseBitcodeInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outModule, ByteBuffer outMessage) returns int = external;
//public function LLVMParseBitcodeInContext1(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, PointerPointer outModule, byte[] outMessage) returns int = external;
public function LLVMParseBitcodeInContext2(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outModule, PointerPointer outMessage) returns int = external;
//public function LLVMParseBitcodeInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outModule, BytePointer outMessage) returns int = external;
//public function LLVMParseBitcodeInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, PointerPointer outModule, ByteBuffer outMessage) returns int = external;
public function LLVMParseBitcodeInContext20(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, PointerPointer outModule) returns int = external;
public function LLVMParseBitcodeInContext21(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outModule) returns int = external;
//public function LLVMGetBitcodeModuleInContext0(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, byte[] outMessage) returns int = external;
//public function LLVMGetBitcodeModuleInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, PointerPointer outM, BytePointer outMessage) returns int = external;
//public function LLVMGetBitcodeModuleInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, ByteBuffer outMessage) returns int = external;
//public function LLVMGetBitcodeModuleInContext1(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, PointerPointer outM, byte[] outMessage) returns int = external;
//public function LLVMGetBitcodeModuleInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, BytePointer outMessage) returns int = external;
public function LLVMGetBitcodeModuleInContext2(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, PointerPointer outMessage) returns int = external;
//public function LLVMGetBitcodeModuleInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, PointerPointer outM, ByteBuffer outMessage) returns int = external;
public function LLVMGetBitcodeModuleInContext20(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outM) returns int = external;
public function LLVMGetBitcodeModuleInContext21(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, PointerPointer outM) returns int = external;
//public function LLVMGetBitcodeModule0(LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, byte[] outMessage) returns int = external;
//public function LLVMGetBitcodeModule(LLVMMemoryBufferRef memBuf, PointerPointer outM, ByteBuffer outMessage) returns int = external;
//public function LLVMGetBitcodeModule(LLVMMemoryBufferRef memBuf, PointerPointer outM, BytePointer outMessage) returns int = external;
//public function LLVMGetBitcodeModule1(LLVMMemoryBufferRef memBuf, PointerPointer outM, byte[] outMessage) returns int = external;
//public function LLVMGetBitcodeModule(LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, ByteBuffer outMessage) returns int = external;
public function LLVMGetBitcodeModule2(LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, PointerPointer outMessage) returns int = external;
//public function LLVMGetBitcodeModule(LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, BytePointer outMessage) returns int = external;
public function LLVMGetBitcodeModule20(LLVMMemoryBufferRef memBuf, LLVMModuleRef outM) returns int = external;
public function LLVMGetBitcodeModule21(LLVMMemoryBufferRef memBuf, PointerPointer outM) returns int = external;
public function LLVMWriteBitcodeToFile(LLVMModuleRef m, string path) returns int = external;
//public function LLVMWriteBitcodeToFile(LLVMModuleRef m, BytePointer path) returns int = external;
public function LLVMWriteBitcodeToFD(LLVMModuleRef m, int fd, int shouldClose, int unbuffered) returns int = external;
public function LLVMWriteBitcodeToFileHandle(LLVMModuleRef m, int fileHandle) returns int = external;
public function LLVMWriteBitcodeToMemoryBuffer(LLVMModuleRef m) returns LLVMMemoryBufferRef = external;
//public function LLVMCreateDisasm(BytePointer tripleName, Pointer disInfo, int tagType, LLVMOpInfoCallback getOpInfo, LLVMSymbolLookupCallback symbolLookUp) returns LLVMDisasmContextRef = external;
public function LLVMCreateDisasm(string tripleName, Pointer disInfo, int tagType, LLVMOpInfoCallback getOpInfo, LLVMSymbolLookupCallback symbolLookUp) returns LLVMDisasmContextRef = external;
public function LLVMCreateDisasmCPU(string triple, string cpu, Pointer disInfo, int tagType, LLVMOpInfoCallback getOpInfo, LLVMSymbolLookupCallback symbolLookUp) returns LLVMDisasmContextRef = external;
//public function LLVMCreateDisasmCPU(BytePointer triple, BytePointer cpu, Pointer disInfo, int tagType, LLVMOpInfoCallback getOpInfo, LLVMSymbolLookupCallback symbolLookUp) returns LLVMDisasmContextRef = external;
public function LLVMCreateDisasmCPUFeatures(string triple, string cpu, string features, Pointer disInfo, int tagType, LLVMOpInfoCallback getOpInfo, LLVMSymbolLookupCallback symbolLookUp) returns LLVMDisasmContextRef = external;
//public function LLVMCreateDisasmCPUFeatures(BytePointer triple, BytePointer cpu, BytePointer features, Pointer disInfo, int tagType, LLVMOpInfoCallback getOpInfo, LLVMSymbolLookupCallback symbolLookUp) returns LLVMDisasmContextRef = external;
public function LLVMSetDisasmOptions(LLVMDisasmContextRef dc, int options) returns int = external;
public function LLVMDisasmDispose(LLVMDisasmContextRef dc) = external;
//public function LLVMDisasmInstruction(LLVMDisasmContextRef dc, ByteBuffer bytes, int bytesSize, int pc, ByteBuffer outString, int outStringSize) returns int = external;
//public function LLVMDisasmInstruction(LLVMDisasmContextRef dc, BytePointer bytes, int bytesSize, int pc, BytePointer outString, int outStringSize) returns int = external;
//public function LLVMDisasmInstruction(LLVMDisasmContextRef dc, byte[] bytes, int bytesSize, int pc, byte[] outString, int outStringSize) returns int = external;
public function LLVMInitializeTransformUtils(LLVMPassRegistryRef r) = external;
public function LLVMInitializeScalarOpts(LLVMPassRegistryRef r) = external;
public function LLVMInitializeObjCARCOpts(LLVMPassRegistryRef r) = external;
public function LLVMInitializeVectorization(LLVMPassRegistryRef r) = external;
public function LLVMInitializeInstCombine(LLVMPassRegistryRef r) = external;
public function LLVMInitializeIPO(LLVMPassRegistryRef r) = external;
public function LLVMInitializeInstrumentation(LLVMPassRegistryRef r) = external;
public function LLVMInitializeAnalysis(LLVMPassRegistryRef r) = external;
public function LLVMInitializeIPA(LLVMPassRegistryRef r) = external;
public function LLVMInitializeCodeGen(LLVMPassRegistryRef r) = external;
public function LLVMInitializeTarget(LLVMPassRegistryRef r) = external;
//public function LLVMParseIRInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, PointerPointer outM, BytePointer outMessage) returns int = external;
//public function LLVMParseIRInContext0(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, byte[] outMessage) returns int = external;
//public function LLVMParseIRInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, ByteBuffer outMessage) returns int = external;
//public function LLVMParseIRInContext1(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, PointerPointer outM, byte[] outMessage) returns int = external;
public function LLVMParseIRInContext2(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, PointerPointer outMessage) returns int = external;
//public function LLVMParseIRInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, LLVMModuleRef outM, BytePointer outMessage) returns int = external;
//public function LLVMParseIRInContext(LLVMContextRef contextRef, LLVMMemoryBufferRef memBuf, PointerPointer outM, ByteBuffer outMessage) returns int = external;
public function LLVMLinkModules2(LLVMModuleRef dest, LLVMModuleRef src) returns int = external;
//public function lto_get_version() returns BytePointer = external;
//public function lto_get_error_message() returns BytePointer = external;
//public function lto_module_is_object_file(string path) returns boolean = external;
//public function lto_module_is_object_file(BytePointer path) returns boolean = external;
//public function lto_module_is_object_file_for_target(BytePointer path, BytePointer target_triple_prefix) returns boolean = external;
//public function lto_module_is_object_file_for_target(string path, string target_triple_prefix) returns boolean = external;
//public function lto_module_has_objc_category(Pointer mem, int length) returns boolean = external;
//public function lto_module_is_object_file_in_memory(Pointer mem, int length) returns boolean = external;
//public function lto_module_is_object_file_in_memory_for_target(Pointer mem, int length, BytePointer target_triple_prefix) returns boolean = external;
//public function lto_module_is_object_file_in_memory_for_target(Pointer mem, int length, string target_triple_prefix) returns boolean = external;
//public function lto_module_create(string path) returns lto_module_t = external;
//public function lto_module_create(BytePointer path) returns lto_module_t = external;
//public function lto_module_create_from_memory(Pointer mem, int length) returns lto_module_t = external;
//public function lto_module_create_from_memory_with_path(Pointer mem, int length, BytePointer path) returns lto_module_t = external;
//public function lto_module_create_from_memory_with_path(Pointer mem, int length, string path) returns lto_module_t = external;
//public function lto_module_create_in_local_context(Pointer mem, int length, string path) returns lto_module_t = external;
//public function lto_module_create_in_local_context(Pointer mem, int length, BytePointer path) returns lto_module_t = external;
//public function lto_module_create_in_codegen_context(Pointer mem, int length, BytePointer path, lto_code_gen_t cg) returns lto_module_t = external;
//public function lto_module_create_in_codegen_context(Pointer mem, int length, string path, lto_code_gen_t cg) returns lto_module_t = external;
//public function lto_module_create_from_fd(int fd, string path, int file_size) returns lto_module_t = external;
//public function lto_module_create_from_fd(int fd, BytePointer path, int file_size) returns lto_module_t = external;
//public function lto_module_create_from_fd_at_offset(int fd, string path, int file_size, int map_size, int offset) returns lto_module_t = external;
//public function lto_module_create_from_fd_at_offset(int fd, BytePointer path, int file_size, int map_size, int offset) returns lto_module_t = external;
//public function lto_module_dispose(lto_module_t mod) = external;
//public function lto_module_get_target_triple(lto_module_t mod) returns BytePointer = external;
//public function lto_module_set_target_triple(lto_module_t mod, string triple) = external;
//public function lto_module_set_target_triple(lto_module_t mod, BytePointer triple) = external;
//public function lto_module_get_num_symbols(lto_module_t mod) returns int = external;
//public function lto_module_get_symbol_name(lto_module_t mod, int index) returns BytePointer = external;
//public function lto_module_get_symbol_attribute(lto_module_t mod, int index) returns int = external;
//public function lto_module_get_linkeropts(lto_module_t mod) returns BytePointer = external;
//public function lto_codegen_set_diagnostic_handler(lto_code_gen_t arg0, lto_diagnostic_handler_t arg1, Pointer arg2) = external;
//public function lto_codegen_create() returns lto_code_gen_t = external;
//public function lto_codegen_create_in_local_context() returns lto_code_gen_t = external;
//public function lto_codegen_dispose(lto_code_gen_t arg0) = external;
//public function lto_codegen_add_module(lto_code_gen_t cg, lto_module_t mod) returns boolean = external;
//public function lto_codegen_set_module(lto_code_gen_t cg, lto_module_t mod) = external;
//public function lto_codegen_set_debug_model(lto_code_gen_t cg, int arg1) returns boolean = external;
//public function lto_codegen_set_pic_model(lto_code_gen_t cg, int arg1) returns boolean = external;
//public function lto_codegen_set_cpu(lto_code_gen_t cg, BytePointer cpu) = external;
//public function lto_codegen_set_cpu(lto_code_gen_t cg, string cpu) = external;
//public function lto_codegen_set_assembler_path(lto_code_gen_t cg, string path) = external;
//public function lto_codegen_set_assembler_path(lto_code_gen_t cg, BytePointer path) = external;
//public function lto_codegen_set_assembler_args(lto_code_gen_t cg, ByteBuffer args, int nargs) = external;
//public function lto_codegen_set_assembler_args(lto_code_gen_t cg, byte[] args, int nargs) = external;
//public function lto_codegen_set_assembler_args(lto_code_gen_t cg, BytePointer args, int nargs) = external;
//public function lto_codegen_set_assembler_args(lto_code_gen_t cg, PointerPointer args, int nargs) = external;
//public function lto_codegen_add_must_preserve_symbol(lto_code_gen_t cg, string symbol) = external;
//public function lto_codegen_add_must_preserve_symbol(lto_code_gen_t cg, BytePointer symbol) = external;
//public function lto_codegen_write_merged_modules(lto_code_gen_t cg, BytePointer path) returns boolean = external;
//public function lto_codegen_write_merged_modules(lto_code_gen_t cg, string path) returns boolean = external;
//public function lto_codegen_compile(lto_code_gen_t cg, SizeTPointer length) returns Pointer = external;
//public function lto_codegen_compile_to_file(lto_code_gen_t cg, BytePointer name) returns boolean = external;
//public function lto_codegen_compile_to_file(lto_code_gen_t cg, byte[] name) returns boolean = external;
//public function lto_codegen_compile_to_file(lto_code_gen_t cg, ByteBuffer name) returns boolean = external;
//public function lto_codegen_compile_to_file(lto_code_gen_t cg, PointerPointer name) returns boolean = external;
//public function lto_codegen_optimize(lto_code_gen_t cg) returns boolean = external;
//public function lto_codegen_compile_optimized(lto_code_gen_t cg, SizeTPointer length) returns Pointer = external;
//public function lto_api_version() returns int = external;
//public function lto_codegen_debug_options(lto_code_gen_t cg, string arg1) = external;
//public function lto_codegen_debug_options(lto_code_gen_t cg, BytePointer arg1) = external;
//public function lto_initialize_disassembler() = external;
//public function lto_codegen_set_should_internalize(lto_code_gen_t cg, boolean shouldInternalize) = external;
//public function lto_codegen_set_should_embed_uselists(lto_code_gen_t cg, boolean shouldEmbedUselists) = external;
//public function thinlto_create_codegen() returns thinlto_code_gen_t = external;
//public function thinlto_codegen_dispose(thinlto_code_gen_t cg) = external;
//public function thinlto_codegen_add_module(thinlto_code_gen_t cg, BytePointer identifier, BytePointer data, int length) = external;
//public function thinlto_codegen_add_module(thinlto_code_gen_t cg, string identifier, string data, int length) = external;
//public function thinlto_codegen_process(thinlto_code_gen_t cg) = external;
//public function thinlto_module_get_num_objects(thinlto_code_gen_t cg) returns int = external;
//public function thinlto_module_get_object(thinlto_code_gen_t cg, int index) returns LTOObjectBuffer = external;
//public function thinlto_module_get_num_object_files(thinlto_code_gen_t cg) returns int = external;
//public function thinlto_module_get_object_file(thinlto_code_gen_t cg, int index) returns BytePointer = external;
//public function thinlto_codegen_set_pic_model(thinlto_code_gen_t cg, int arg1) returns boolean = external;
//public function thinlto_codegen_set_savetemps_dir(thinlto_code_gen_t cg, BytePointer save_temps_dir) = external;
//public function thinlto_codegen_set_savetemps_dir(thinlto_code_gen_t cg, string save_temps_dir) = external;
//public function thinlto_set_generated_objects_dir(thinlto_code_gen_t cg, string save_temps_dir) = external;
//public function thinlto_set_generated_objects_dir(thinlto_code_gen_t cg, BytePointer save_temps_dir) = external;
//public function thinlto_codegen_set_cpu(thinlto_code_gen_t cg, BytePointer cpu) = external;
//public function thinlto_codegen_set_cpu(thinlto_code_gen_t cg, string cpu) = external;
//public function thinlto_codegen_disable_codegen(thinlto_code_gen_t cg, boolean disable) = external;
//public function thinlto_codegen_set_codegen_only(thinlto_code_gen_t cg, boolean codegen_only) = external;
//public function thinlto_debug_options(ByteBuffer options, int number) = external;
//public function thinlto_debug_options(byte[] options, int number) = external;
//public function thinlto_debug_options(PointerPointer options, int number) = external;
//public function thinlto_debug_options(BytePointer options, int number) = external;
//public function lto_module_is_thinlto(lto_module_t mod) returns boolean = external;
//public function thinlto_codegen_add_must_preserve_symbol(thinlto_code_gen_t cg, BytePointer name, int length) = external;
//public function thinlto_codegen_add_must_preserve_symbol(thinlto_code_gen_t cg, string name, int length) = external;
//public function thinlto_codegen_add_cross_referenced_symbol(thinlto_code_gen_t cg, string name, int length) = external;
//public function thinlto_codegen_add_cross_referenced_symbol(thinlto_code_gen_t cg, BytePointer name, int length) = external;
//public function thinlto_codegen_set_cache_dir(thinlto_code_gen_t cg, BytePointer cache_dir) = external;
//public function thinlto_codegen_set_cache_dir(thinlto_code_gen_t cg, string cache_dir) = external;
//public function thinlto_codegen_set_cache_pruning_interval(thinlto_code_gen_t cg, int interval) = external;
//public function thinlto_codegen_set_final_cache_size_relative_to_available_space(thinlto_code_gen_t cg, int percentage) = external;
//public function thinlto_codegen_set_cache_entry_expiration(thinlto_code_gen_t cg, int expiration) = external;
public function LLVMCreateObjectFile(LLVMMemoryBufferRef memBuf) returns LLVMObjectFileRef = external;
public function LLVMDisposeObjectFile(LLVMObjectFileRef objectFile) = external;
public function LLVMGetSections(LLVMObjectFileRef objectFile) returns LLVMSectionIteratorRef = external;
public function LLVMDisposeSectionIterator(LLVMSectionIteratorRef si) = external;
public function LLVMIsSectionIteratorAtEnd(LLVMObjectFileRef objectFile, LLVMSectionIteratorRef si) returns int = external;
public function LLVMMoveToNextSection(LLVMSectionIteratorRef si) = external;
public function LLVMMoveToContainingSection(LLVMSectionIteratorRef sect, LLVMSymbolIteratorRef sym) = external;
public function LLVMGetSymbols(LLVMObjectFileRef objectFile) returns LLVMSymbolIteratorRef = external;
public function LLVMDisposeSymbolIterator(LLVMSymbolIteratorRef si) = external;
public function LLVMIsSymbolIteratorAtEnd(LLVMObjectFileRef objectFile, LLVMSymbolIteratorRef si) returns int = external;
public function LLVMMoveToNextSymbol(LLVMSymbolIteratorRef si) = external;
public function LLVMGetSectionName(LLVMSectionIteratorRef si) returns BytePointer = external;
public function LLVMGetSectionSize(LLVMSectionIteratorRef si) returns int = external;
public function LLVMGetSectionContents(LLVMSectionIteratorRef si) returns BytePointer = external;
public function LLVMGetSectionAddress(LLVMSectionIteratorRef si) returns int = external;
public function LLVMGetSectionContainsSymbol(LLVMSectionIteratorRef si, LLVMSymbolIteratorRef sym) returns int = external;
public function LLVMGetRelocations(LLVMSectionIteratorRef section) returns LLVMRelocationIteratorRef = external;
public function LLVMDisposeRelocationIterator(LLVMRelocationIteratorRef ri) = external;
public function LLVMIsRelocationIteratorAtEnd(LLVMSectionIteratorRef section, LLVMRelocationIteratorRef ri) returns int = external;
public function LLVMMoveToNextRelocation(LLVMRelocationIteratorRef ri) = external;
public function LLVMGetSymbolName(LLVMSymbolIteratorRef si) returns BytePointer = external;
public function LLVMGetSymbolAddress(LLVMSymbolIteratorRef si) returns int = external;
public function LLVMGetSymbolSize(LLVMSymbolIteratorRef si) returns int = external;
public function LLVMGetRelocationOffset(LLVMRelocationIteratorRef ri) returns int = external;
public function LLVMGetRelocationSymbol(LLVMRelocationIteratorRef ri) returns LLVMSymbolIteratorRef = external;
public function LLVMGetRelocationType(LLVMRelocationIteratorRef ri) returns int = external;
public function LLVMGetRelocationTypeName(LLVMRelocationIteratorRef ri) returns BytePointer = external;
public function LLVMGetRelocationValueString(LLVMRelocationIteratorRef ri) returns BytePointer = external;
public function LLVMInitializeAllTargetInfos() = external;
public function LLVMInitializeAllTargets() = external;
public function LLVMInitializeAllTargetMCs() = external;
public function LLVMInitializeAllAsmPrinters() = external;
public function LLVMInitializeAllAsmParsers() = external;
public function LLVMInitializeAllDisassemblers() = external;
public function LLVMInitializeNativeTarget() returns int = external;
public function LLVMInitializeNativeAsmParser() returns int = external;
public function LLVMInitializeNativeAsmPrinter() returns int = external;
public function LLVMInitializeNativeDisassembler() returns int = external;
public function LLVMGetModuleDataLayout(LLVMModuleRef m) returns LLVMTargetDataRef = external;
public function LLVMSetModuleDataLayout(LLVMModuleRef m, LLVMTargetDataRef dl) = external;
//public function LLVMCreateTargetData(BytePointer stringRep) returns LLVMTargetDataRef = external;
public function LLVMCreateTargetData(string stringRep) returns LLVMTargetDataRef = external;
public function LLVMDisposeTargetData(LLVMTargetDataRef td) = external;
public function LLVMAddTargetLibraryInfo(LLVMTargetLibraryInfoRef tli, LLVMPassManagerRef pm) = external;
public function LLVMCopyStringRepOfTargetData(LLVMTargetDataRef td) returns BytePointer = external;
public function LLVMByteOrder(LLVMTargetDataRef td) returns int = external;
public function LLVMPointerSize(LLVMTargetDataRef td) returns int = external;
public function LLVMPointerSizeForAS(LLVMTargetDataRef td, int asValue) returns int = external;
public function LLVMIntPtrType(LLVMTargetDataRef td) returns LLVMTypeRef = external;
public function LLVMIntPtrTypeForAS(LLVMTargetDataRef td, int asValue) returns LLVMTypeRef = external;
public function LLVMIntPtrTypeInContext(LLVMContextRef c, LLVMTargetDataRef td) returns LLVMTypeRef = external;
public function LLVMIntPtrTypeForASInContext(LLVMContextRef c, LLVMTargetDataRef td, int asValue) returns LLVMTypeRef = external;
public function LLVMSizeOfTypeInBits(LLVMTargetDataRef td, LLVMTypeRef ty) returns int = external;
public function LLVMStoreSizeOfType(LLVMTargetDataRef td, LLVMTypeRef ty) returns int = external;
public function LLVMABISizeOfType(LLVMTargetDataRef td, LLVMTypeRef ty) returns int = external;
public function LLVMABIAlignmentOfType(LLVMTargetDataRef td, LLVMTypeRef ty) returns int = external;
public function LLVMCallFrameAlignmentOfType(LLVMTargetDataRef td, LLVMTypeRef ty) returns int = external;
public function LLVMPreferredAlignmentOfType(LLVMTargetDataRef td, LLVMTypeRef ty) returns int = external;
public function LLVMPreferredAlignmentOfGlobal(LLVMTargetDataRef td, LLVMValueRef globalVar) returns int = external;
public function LLVMElementAtOffset(LLVMTargetDataRef td, LLVMTypeRef structTy, int offset) returns int = external;
public function LLVMOffsetOfElement(LLVMTargetDataRef td, LLVMTypeRef structTy, int element) returns int = external;
public function LLVMGetFirstTarget() returns LLVMTargetRef = external;
public function LLVMGetNextTarget(LLVMTargetRef t) returns LLVMTargetRef = external;
//public function LLVMGetTargetFromName(BytePointer name) returns LLVMTargetRef = external;
public function LLVMGetTargetFromName(string name) returns LLVMTargetRef = external;
//public function LLVMGetTargetFromTriple(BytePointer triple, LLVMTargetRef t, byte[] errorMessage) returns int = external;
//public function LLVMGetTargetFromTriple(string triple, PointerPointer t, BytePointer errorMessage) returns int = external;
//public function LLVMGetTargetFromTriple(BytePointer triple, LLVMTargetRef t, ByteBuffer errorMessage) returns int = external;
//public function LLVMGetTargetFromTriple(string triple, PointerPointer t, byte[] errorMessage) returns int = external;
//public function LLVMGetTargetFromTriple(BytePointer triple, LLVMTargetRef t, PointerPointer errorMessage) returns int = external;
//public function LLVMGetTargetFromTriple(BytePointer triple, LLVMTargetRef t, BytePointer errorMessage) returns int = external;
//public function LLVMGetTargetFromTriple(string triple, PointerPointer t, ByteBuffer errorMessage) returns int = external;
public function LLVMGetTargetName(LLVMTargetRef t) returns BytePointer = external;
public function LLVMGetTargetDescription(LLVMTargetRef t) returns BytePointer = external;
public function LLVMTargetHasJIT(LLVMTargetRef t) returns int = external;
public function LLVMTargetHasTargetMachine(LLVMTargetRef t) returns int = external;
public function LLVMTargetHasAsmBackend(LLVMTargetRef t) returns int = external;
//public function LLVMCreateTargetMachine(LLVMTargetRef t, string triple, string cpu, string features, int level, int reloc, int codeModel) returns LLVMTargetMachineRef = external;
public function LLVMCreateTargetMachine(LLVMTargetRef t, BytePointer triple, BytePointer cpu, BytePointer features, int level, int reloc, int codeModel) returns LLVMTargetMachineRef = external;
public function LLVMDisposeTargetMachine(LLVMTargetMachineRef t) = external;
public function LLVMGetTargetMachineTarget(LLVMTargetMachineRef t) returns LLVMTargetRef = external;
public function LLVMGetTargetMachineTriple(LLVMTargetMachineRef t) returns BytePointer = external;
public function LLVMGetTargetMachineCPU(LLVMTargetMachineRef t) returns BytePointer = external;
public function LLVMGetTargetMachineFeatureString(LLVMTargetMachineRef t) returns BytePointer = external;
public function LLVMCreateTargetDataLayout(LLVMTargetMachineRef t) returns LLVMTargetDataRef = external;
public function LLVMSetTargetMachineAsmVerbosity(LLVMTargetMachineRef t, int verboseAsm) = external;
//public function LLVMTargetMachineEmitToFile(LLVMTargetMachineRef t, LLVMModuleRef m, BytePointer filename, int codegen, BytePointer errorMessage) returns int = external;
public function LLVMTargetMachineEmitToFile(LLVMTargetMachineRef t, LLVMModuleRef m, byte[] filename, int codegen, byte[] errorMessage) returns int = external;
//public function LLVMTargetMachineEmitToFile(LLVMTargetMachineRef t, LLVMModuleRef m, ByteBuffer filename, int codegen, ByteBuffer errorMessage) returns int = external;
//public function LLVMTargetMachineEmitToFile(LLVMTargetMachineRef t, LLVMModuleRef m, BytePointer filename, int codegen, PointerPointer errorMessage) returns int = external;
//public function LLVMTargetMachineEmitToMemoryBuffer0(LLVMTargetMachineRef t, LLVMModuleRef m, int codegen, byte[] errorMessage, LLVMMemoryBufferRef outMemBuf) returns int = external;
//public function LLVMTargetMachineEmitToMemoryBuffer(LLVMTargetMachineRef t, LLVMModuleRef m, int codegen, BytePointer errorMessage, PointerPointer outMemBuf) returns int = external;
//public function LLVMTargetMachineEmitToMemoryBuffer(LLVMTargetMachineRef t, LLVMModuleRef m, int codegen, ByteBuffer errorMessage, LLVMMemoryBufferRef outMemBuf) returns int = external;
//public function LLVMTargetMachineEmitToMemoryBuffer1(LLVMTargetMachineRef t, LLVMModuleRef m, int codegen, byte[] errorMessage, PointerPointer outMemBuf) returns int = external;
public function LLVMTargetMachineEmitToMemoryBuffer2(LLVMTargetMachineRef t, LLVMModuleRef m, int codegen, PointerPointer errorMessage, LLVMMemoryBufferRef outMemBuf) returns int = external;
//public function LLVMTargetMachineEmitToMemoryBuffer(LLVMTargetMachineRef t, LLVMModuleRef m, int codegen, BytePointer errorMessage, LLVMMemoryBufferRef outMemBuf) returns int = external;
//public function LLVMTargetMachineEmitToMemoryBuffer(LLVMTargetMachineRef t, LLVMModuleRef m, int codegen, ByteBuffer errorMessage, PointerPointer outMemBuf) returns int = external;
public function LLVMGetDefaultTargetTriple() returns BytePointer = external;
public function LLVMAddAnalysisPasses(LLVMTargetMachineRef t, LLVMPassManagerRef pm) = external;
public function LLVMLinkInMCJIT() = external;
public function LLVMLinkInInterpreter() = external;
public function LLVMCreateGenericValueOfInt(LLVMTypeRef ty, int n, int isSigned) returns LLVMGenericValueRef = external;
public function LLVMCreateGenericValueOfPointer(Pointer p) returns LLVMGenericValueRef = external;
//public function LLVMCreateGenericValueOfFloat(LLVMTypeRef ty, double n) returns LLVMGenericValueRef = external;
public function LLVMGenericValueIntWidth(LLVMGenericValueRef genValRef) returns int = external;
public function LLVMGenericValueToInt(LLVMGenericValueRef genVal, int isSigned) returns int = external;
public function LLVMGenericValueToPointer(LLVMGenericValueRef genVal) returns Pointer = external;
//public function LLVMGenericValueToFloat(LLVMTypeRef tyRef, LLVMGenericValueRef genVal) returns double = external;
public function LLVMDisposeGenericValue(LLVMGenericValueRef genVal) = external;
//public function LLVMCreateExecutionEngineForModule0(LLVMExecutionEngineRef outEE, LLVMModuleRef m, byte[] outError) returns int = external;
//public function LLVMCreateExecutionEngineForModule(PointerPointer outEE, LLVMModuleRef m, ByteBuffer outError) returns int = external;
//public function LLVMCreateExecutionEngineForModule(PointerPointer outEE, LLVMModuleRef m, BytePointer outError) returns int = external;
//public function LLVMCreateExecutionEngineForModule(LLVMExecutionEngineRef outEE, LLVMModuleRef m, ByteBuffer outError) returns int = external;
//public function LLVMCreateExecutionEngineForModule1(PointerPointer outEE, LLVMModuleRef m, byte[] outError) returns int = external;
public function LLVMCreateExecutionEngineForModule2(LLVMExecutionEngineRef outEE, LLVMModuleRef m, PointerPointer outError) returns int = external;
//public function LLVMCreateExecutionEngineForModule(LLVMExecutionEngineRef outEE, LLVMModuleRef m, BytePointer outError) returns int = external;
//public function LLVMCreateInterpreterForModule0(LLVMExecutionEngineRef outInterp, LLVMModuleRef m, byte[] outError) returns int = external;
//public function LLVMCreateInterpreterForModule(PointerPointer outInterp, LLVMModuleRef m, BytePointer outError) returns int = external;
//public function LLVMCreateInterpreterForModule(LLVMExecutionEngineRef outInterp, LLVMModuleRef m, ByteBuffer outError) returns int = external;
//public function LLVMCreateInterpreterForModule1(PointerPointer outInterp, LLVMModuleRef m, byte[] outError) returns int = external;
public function LLVMCreateInterpreterForModule2(LLVMExecutionEngineRef outInterp, LLVMModuleRef m, PointerPointer outError) returns int = external;
//public function LLVMCreateInterpreterForModule(LLVMExecutionEngineRef outInterp, LLVMModuleRef m, BytePointer outError) returns int = external;
//public function LLVMCreateInterpreterForModule(PointerPointer outInterp, LLVMModuleRef m, ByteBuffer outError) returns int = external;
//public function LLVMCreateJITCompilerForModule(PointerPointer outJIT, LLVMModuleRef m, int optLevel, BytePointer outError) returns int = external;
//public function LLVMCreateJITCompilerForModule0(LLVMExecutionEngineRef outJIT, LLVMModuleRef m, int optLevel, byte[] outError) returns int = external;
//public function LLVMCreateJITCompilerForModule(LLVMExecutionEngineRef outJIT, LLVMModuleRef m, int optLevel, ByteBuffer outError) returns int = external;
//public function LLVMCreateJITCompilerForModule1(PointerPointer outJIT, LLVMModuleRef m, int optLevel, byte[] outError) returns int = external;
public function LLVMCreateJITCompilerForModule2(LLVMExecutionEngineRef outJIT, LLVMModuleRef m, int optLevel, PointerPointer outError) returns int = external;
//public function LLVMCreateJITCompilerForModule(LLVMExecutionEngineRef outJIT, LLVMModuleRef m, int optLevel, BytePointer outError) returns int = external;
//public function LLVMCreateJITCompilerForModule(PointerPointer outJIT, LLVMModuleRef m, int optLevel, ByteBuffer outError) returns int = external;
public function LLVMInitializeMCJITCompilerOptions(LLVMMCJITCompilerOptions options, int sizeOfOptions) = external;
//public function LLVMCreateMCJITCompilerForModule0(LLVMExecutionEngineRef outJIT, LLVMModuleRef m, LLVMMCJITCompilerOptions options, int sizeOfOptions, byte[] outError) returns int = external;
//public function LLVMCreateMCJITCompilerForModule(PointerPointer outJIT, LLVMModuleRef m, LLVMMCJITCompilerOptions options, int sizeOfOptions, BytePointer outError) returns int = external;
//public function LLVMCreateMCJITCompilerForModule(LLVMExecutionEngineRef outJIT, LLVMModuleRef m, LLVMMCJITCompilerOptions options, int sizeOfOptions, ByteBuffer outError) returns int = external;
//public function LLVMCreateMCJITCompilerForModule1(PointerPointer outJIT, LLVMModuleRef m, LLVMMCJITCompilerOptions options, int sizeOfOptions, byte[] outError) returns int = external;
public function LLVMCreateMCJITCompilerForModule2(LLVMExecutionEngineRef outJIT, LLVMModuleRef m, LLVMMCJITCompilerOptions options, int sizeOfOptions, PointerPointer outError) returns int = external;
//public function LLVMCreateMCJITCompilerForModule(LLVMExecutionEngineRef outJIT, LLVMModuleRef m, LLVMMCJITCompilerOptions options, int sizeOfOptions, BytePointer outError) returns int = external;
//public function LLVMCreateMCJITCompilerForModule(PointerPointer outJIT, LLVMModuleRef m, LLVMMCJITCompilerOptions options, int sizeOfOptions, ByteBuffer outError) returns int = external;
public function LLVMDisposeExecutionEngine(LLVMExecutionEngineRef ee) = external;
public function LLVMRunStaticConstructors(LLVMExecutionEngineRef ee) = external;
public function LLVMRunStaticDestructors(LLVMExecutionEngineRef ee) = external;
//public function LLVMRunFunctionAsMain(LLVMExecutionEngineRef ee, LLVMValueRef f, int argC, ByteBuffer argV, ByteBuffer envP) returns int = external;
//public function LLVMRunFunctionAsMain(LLVMExecutionEngineRef ee, LLVMValueRef f, int argC, BytePointer argV, BytePointer envP) returns int = external;
//public function LLVMRunFunctionAsMain0(LLVMExecutionEngineRef ee, LLVMValueRef f, int argC, byte[] argV, byte[] envP) returns int = external;
public function LLVMRunFunctionAsMain1(LLVMExecutionEngineRef ee, LLVMValueRef f, int argC, PointerPointer argV, PointerPointer envP) returns int = external;
public function LLVMRunFunction0(LLVMExecutionEngineRef ee, LLVMValueRef f, int numArgs, PointerPointer args) returns LLVMGenericValueRef = external;
public function LLVMRunFunction1(LLVMExecutionEngineRef ee, LLVMValueRef f, int numArgs, LLVMGenericValueRef args) returns LLVMGenericValueRef = external;
public function LLVMFreeMachineCodeForFunction(LLVMExecutionEngineRef ee, LLVMValueRef f) = external;
public function LLVMAddModule(LLVMExecutionEngineRef ee, LLVMModuleRef m) = external;
//public function LLVMRemoveModule0(LLVMExecutionEngineRef ee, LLVMModuleRef m, LLVMModuleRef outMod, byte[] outError) returns int = external;
//public function LLVMRemoveModule(LLVMExecutionEngineRef ee, LLVMModuleRef m, PointerPointer outMod, BytePointer outError) returns int = external;
//public function LLVMRemoveModule(LLVMExecutionEngineRef ee, LLVMModuleRef m, LLVMModuleRef outMod, ByteBuffer outError) returns int = external;
//public function LLVMRemoveModule1(LLVMExecutionEngineRef ee, LLVMModuleRef m, PointerPointer outMod, byte[] outError) returns int = external;
public function LLVMRemoveModule2(LLVMExecutionEngineRef ee, LLVMModuleRef m, LLVMModuleRef outMod, PointerPointer outError) returns int = external;
//public function LLVMRemoveModule(LLVMExecutionEngineRef ee, LLVMModuleRef m, LLVMModuleRef outMod, BytePointer outError) returns int = external;
//public function LLVMRemoveModule(LLVMExecutionEngineRef ee, LLVMModuleRef m, PointerPointer outMod, ByteBuffer outError) returns int = external;
public function LLVMFindFunction(LLVMExecutionEngineRef ee, string name, PointerPointer outFn) returns int = external;
//public function LLVMFindFunction(LLVMExecutionEngineRef ee, BytePointer name, LLVMValueRef outFn) returns int = external;
public function LLVMRecompileAndRelinkFunction(LLVMExecutionEngineRef ee, LLVMValueRef fn) returns Pointer = external;
public function LLVMGetExecutionEngineTargetData(LLVMExecutionEngineRef ee) returns LLVMTargetDataRef = external;
public function LLVMGetExecutionEngineTargetMachine(LLVMExecutionEngineRef ee) returns LLVMTargetMachineRef = external;
public function LLVMAddGlobalMapping(LLVMExecutionEngineRef ee, LLVMValueRef global, Pointer addr) = external;
public function LLVMGetPointerToGlobal(LLVMExecutionEngineRef ee, LLVMValueRef global) returns Pointer = external;
//public function LLVMGetGlobalValueAddress(LLVMExecutionEngineRef ee, BytePointer name) returns int = external;
public function LLVMGetGlobalValueAddress(LLVMExecutionEngineRef ee, string name) returns int = external;
public function LLVMGetFunctionAddress(LLVMExecutionEngineRef ee, string name) returns int = external;
//public function LLVMGetFunctionAddress(LLVMExecutionEngineRef ee, BytePointer name) returns int = external;
public function LLVMCreateSimpleMCJITMemoryManager(Pointer opaque, LLVMMemoryManagerAllocateCodeSectionCallback allocateCodeSection, LLVMMemoryManagerAllocateDataSectionCallback allocateDataSection, LLVMMemoryManagerFinalizeMemoryCallback finalizeMemory, LLVMMemoryManagerDestroyCallback destroy) returns LLVMMCJITMemoryManagerRef = external;
public function LLVMDisposeMCJITMemoryManager(LLVMMCJITMemoryManagerRef mm) = external;
public function LLVMAddArgumentPromotionPass(LLVMPassManagerRef pm) = external;
public function LLVMAddConstantMergePass(LLVMPassManagerRef pm) = external;
public function LLVMAddCalledValuePropagationPass(LLVMPassManagerRef pm) = external;
public function LLVMAddDeadArgEliminationPass(LLVMPassManagerRef pm) = external;
public function LLVMAddFunctionAttrsPass(LLVMPassManagerRef pm) = external;
public function LLVMAddFunctionInliningPass(LLVMPassManagerRef pm) = external;
public function LLVMAddAlwaysInlinerPass(LLVMPassManagerRef pm) = external;
public function LLVMAddGlobalDCEPass(LLVMPassManagerRef pm) = external;
public function LLVMAddGlobalOptimizerPass(LLVMPassManagerRef pm) = external;
public function LLVMAddIPConstantPropagationPass(LLVMPassManagerRef pm) = external;
public function LLVMAddPruneEHPass(LLVMPassManagerRef pm) = external;
public function LLVMAddIPSCCPPass(LLVMPassManagerRef pm) = external;
public function LLVMAddInternalizePass(LLVMPassManagerRef arg0, int allButMain) = external;
public function LLVMAddStripDeadPrototypesPass(LLVMPassManagerRef pm) = external;
public function LLVMAddStripSymbolsPass(LLVMPassManagerRef pm) = external;
public function LLVMPassManagerBuilderCreate() returns LLVMPassManagerBuilderRef = external;
public function LLVMPassManagerBuilderDispose(LLVMPassManagerBuilderRef pmb) = external;
public function LLVMPassManagerBuilderSetOptLevel(LLVMPassManagerBuilderRef pmb, int optLevel) = external;
public function LLVMPassManagerBuilderSetSizeLevel(LLVMPassManagerBuilderRef pmb, int sizeLevel) = external;
public function LLVMPassManagerBuilderSetDisableUnitAtATime(LLVMPassManagerBuilderRef pmb, int value) = external;
public function LLVMPassManagerBuilderSetDisableUnrollLoops(LLVMPassManagerBuilderRef pmb, int value) = external;
public function LLVMPassManagerBuilderSetDisableSimplifyLibCalls(LLVMPassManagerBuilderRef pmb, int value) = external;
public function LLVMPassManagerBuilderUseInlinerWithThreshold(LLVMPassManagerBuilderRef pmb, int threshold) = external;
public function LLVMPassManagerBuilderPopulateFunctionPassManager(LLVMPassManagerBuilderRef pmb, LLVMPassManagerRef pm) = external;
public function LLVMPassManagerBuilderPopulateModulePassManager(LLVMPassManagerBuilderRef pmb, LLVMPassManagerRef pm) = external;
public function LLVMPassManagerBuilderPopulateLTOPassManager(LLVMPassManagerBuilderRef pmb, LLVMPassManagerRef pm, int internalize, int runInliner) = external;
public function LLVMAddAggressiveDCEPass(LLVMPassManagerRef pm) = external;
public function LLVMAddBitTrackingDCEPass(LLVMPassManagerRef pm) = external;
public function LLVMAddAlignmentFromAssumptionsPass(LLVMPassManagerRef pm) = external;
public function LLVMAddCFGSimplificationPass(LLVMPassManagerRef pm) = external;
public function LLVMAddDeadStoreEliminationPass(LLVMPassManagerRef pm) = external;
public function LLVMAddScalarizerPass(LLVMPassManagerRef pm) = external;
public function LLVMAddMergedLoadStoreMotionPass(LLVMPassManagerRef pm) = external;
public function LLVMAddGVNPass(LLVMPassManagerRef pm) = external;
public function LLVMAddNewGVNPass(LLVMPassManagerRef pm) = external;
public function LLVMAddIndVarSimplifyPass(LLVMPassManagerRef pm) = external;
public function LLVMAddInstructionCombiningPass(LLVMPassManagerRef pm) = external;
public function LLVMAddJumpThreadingPass(LLVMPassManagerRef pm) = external;
public function LLVMAddLICMPass(LLVMPassManagerRef pm) = external;
public function LLVMAddLoopDeletionPass(LLVMPassManagerRef pm) = external;
public function LLVMAddLoopIdiomPass(LLVMPassManagerRef pm) = external;
public function LLVMAddLoopRotatePass(LLVMPassManagerRef pm) = external;
public function LLVMAddLoopRerollPass(LLVMPassManagerRef pm) = external;
public function LLVMAddLoopUnrollPass(LLVMPassManagerRef pm) = external;
public function LLVMAddLoopUnswitchPass(LLVMPassManagerRef pm) = external;
public function LLVMAddMemCpyOptPass(LLVMPassManagerRef pm) = external;
public function LLVMAddPartiallyInlineLibCallsPass(LLVMPassManagerRef pm) = external;
public function LLVMAddLowerSwitchPass(LLVMPassManagerRef pm) = external;
public function LLVMAddPromoteMemoryToRegisterPass(LLVMPassManagerRef pm) = external;
public function LLVMAddReassociatePass(LLVMPassManagerRef pm) = external;
public function LLVMAddSCCPPass(LLVMPassManagerRef pm) = external;
public function LLVMAddScalarReplAggregatesPass(LLVMPassManagerRef pm) = external;
public function LLVMAddScalarReplAggregatesPassSSA(LLVMPassManagerRef pm) = external;
public function LLVMAddScalarReplAggregatesPassWithThreshold(LLVMPassManagerRef pm, int threshold) = external;
public function LLVMAddSimplifyLibCallsPass(LLVMPassManagerRef pm) = external;
public function LLVMAddTailCallEliminationPass(LLVMPassManagerRef pm) = external;
public function LLVMAddConstantPropagationPass(LLVMPassManagerRef pm) = external;
public function LLVMAddDemoteMemoryToRegisterPass(LLVMPassManagerRef pm) = external;
public function LLVMAddVerifierPass(LLVMPassManagerRef pm) = external;
public function LLVMAddCorrelatedValuePropagationPass(LLVMPassManagerRef pm) = external;
public function LLVMAddEarlyCSEPass(LLVMPassManagerRef pm) = external;
public function LLVMAddEarlyCSEMemSSAPass(LLVMPassManagerRef pm) = external;
public function LLVMAddLowerExpectIntrinsicPass(LLVMPassManagerRef pm) = external;
public function LLVMAddTypeBasedAliasAnalysisPass(LLVMPassManagerRef pm) = external;
public function LLVMAddScopedNoAliasAAPass(LLVMPassManagerRef pm) = external;
public function LLVMAddBasicAliasAnalysisPass(LLVMPassManagerRef pm) = external;
public function LLVMAddBBVectorizePass(LLVMPassManagerRef pm) = external;
public function LLVMAddLoopVectorizePass(LLVMPassManagerRef pm) = external;
public function LLVMAddSLPVectorizePass(LLVMPassManagerRef pm) = external;
